object SyntAnal27: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Reserved word'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Identifier'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end>
  TokenRules = <
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      AlwaysEnabled = True
      TokenType = 1
      Expression = '(?s)\(\*.*?(\*\)|\Z)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id'
      StyleName = 'Identifier'
      TokenType = 2
      Expression = '[a-z_]\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 4
      Expression = '".*?("|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Float'
      StyleName = 'Number'
      TokenType = 5
      Expression = '\d+\.?\d+ e[\+\-]?\d+\b |'#13#10'\d+\.\d+\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Integer'
      StyleName = 'Number'
      TokenType = 5
      Expression = '\d+\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 3
      Expression = '[/\*,\.;:\(\)=<>\+\-\[\]]'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'Id keywords'
      StyleName = 'Reserved word'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'ARRAY'
            'BEGIN'
            'BOOLEAN'
            'BY'
            'CARDINAL'
            'CASE'
            'CHAR'
            'CLASS'
            'CONST'
            'DEFINITION'
            'DESTROY'
            'DIV'
            'DO'
            'ELSE'
            'ELSIF'
            'END'
            'EXIT'
            'EXPORT'
            'FOR'
            'FOREIGN'
            'FROM'
            'IF'
            'IMPLEMENTATION'
            'IMPORT'
            'INHERIT'
            'INIT'
            'INLINE'
            'INTEGER'
            'LONGCARD'
            'LONGINT'
            'LONGREAL'
            'LOOP'
            'MOD'
            'MODULE'
            'NIL'
            'OF'
            'POINTER'
            'PROCEDURE'
            'REAL'
            'RECORD'
            'REPEAT'
            'RETURN'
            'SET'
            'THEN'
            'TO'
            'TYPE'
            'UNTIL'
            'VAR'
            'WHILE'
            'WITH')
          TokenTypes = 4
        end>
      HighlightPos = cpBound
      IgnoreAsParent = False
    end
    item
      DisplayName = 'class start'
      ConditionList = <
        item
          TokenTypes = 4
        end
        item
          TagList.Strings = (
            'CLASS'
            'PROCEDURE')
          TokenTypes = 4
        end>
      BlockEnd = 'class end'
      NameFmt = '%s1 %s0'
      HighlightPos = cpBound
      CollapseFmt = '%s0 ...'
      IgnoreAsParent = False
    end
    item
      DisplayName = 'class end'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TokenTypes = 4
        end
        item
          TagList.Strings = (
            'END')
          TokenTypes = 4
        end>
      SameIdent = True
      HighlightPos = cpBound
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    '"test" + 12.30 + 1.2e-3 (* comment *)'
    'begin end;'
    ''
    'PROCEDURE Test(N: INTEGER)'
    'BEGIN'
    'END Test;')
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Id'
    'Symbol'
    'String'
    'Number')
  Extentions = 'm2 mod'
  LexerName = 'Modula-2'
  Charset = DEFAULT_CHARSET
end
