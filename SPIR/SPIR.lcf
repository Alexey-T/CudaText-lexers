object SyntAnal33: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Var'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGreen
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end>
  TokenRules = <
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 4
      Expression = '"(\\"|\\\\|.)*?("|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      TokenType = 2
      Expression = '[a-z_]\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Var'
      StyleName = 'Var'
      TokenType = 6
      Expression = '%\w+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Float'
      StyleName = 'Number'
      TokenType = 5
      Expression = '\d+\.\d+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Integer'
      StyleName = 'Number'
      TokenType = 5
      Expression = '\d+\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      TokenType = 1
      Expression = ';.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 3
      Expression = '[/\+\-\*=<>\(\)]'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    ';SPIR-V'
    ';Generator: Khronos Glslang Reference Front End; 1'
    'OpCapability Shader'
    '%1 = OpExtInstImport "GLSL.std.450"'
    'OpMemoryModel Logical GLSL450'
    'OpEntryPoint Fragment %4 "main" %9'
    'OpSource GLSL 450'
    '%var = OpConstant %nn 0.4 2D'
    'OpReturn'
    'OpFunctionEnd')
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Id'
    'Symbol'
    'String'
    'Number'
    'Var')
  Extentions = 'spv spvasm spirv spir-v'
  LexerName = 'SPIR'
  Notes.Strings = (
    'Alexey (CudaText)'
    'Docs:'
    
      'https://www.khronos.org/assets/uploads/developers/library/2016-v' +
      'ulkan-devday-uk/3-Intro-to-spir-v-shaders.pdf'
    'https://streamhpc.com/blog/2013-12-27/opencl-spir-by-example/'
    
      'http://llvm.org/devmtg/2017-03//assets/slides/spirv_infrastructu' +
      're_and_its_place_in_the_llvm_ecosystem.pdf')
  LineComment = ';'
  Charset = DEFAULT_CHARSET
end
