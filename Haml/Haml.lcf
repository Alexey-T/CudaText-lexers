object SyntAnal29: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Num'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Tag'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlue
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Var'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGreen
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id keyw'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clPurple
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Class'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end>
  TokenRules = <
    item
      DisplayName = 'Cmt'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '^(-\#|/).* (\z\s.*)*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Str'
      StyleName = 'String'
      TokenType = 4
      Expression = '('#39'|").*?(\1|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      TokenType = 2
      Expression = '[a-z_]\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '1Tag'
      StyleName = 'Tag'
      TokenType = 6
      Expression = '^[\x20\x09]* %\w+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '1TagProp'
      StyleName = 'Class'
      TokenType = 7
      Expression = '^[\x20\x09]* \#\w+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Var'
      StyleName = 'Var'
      Expression = '@\w+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '1Symb'
      StyleName = 'Symbol'
      TokenType = 8
      Expression = '^[\x20\x09]* [\:\.,;\-\+/\*\(\)\{\}\[\]<>=%!\#\|\?~\\]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symb'
      StyleName = 'Symbol'
      TokenType = 3
      Expression = '[\:\.,;\-\+/\*\(\)\{\}\[\]<>=%!\#\|\?~\\]'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'keyw'
      StyleName = 'Id keyw'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'do'
            'each'
            'else'
            'for'
            'if'
            'in'
            'unless')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'block'
      ConditionList = <
        item
          TokenTypes = 448
        end>
      EndOfTextClose = True
      HighlightPos = cpAny
      GroupIndex = 20
      CollapseFmt = '%sz0'
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    '/ Short comment'
    '  This is a block comment'
    '  %strong there can even be tags'
    '%title Test  '
    '-# Haml comment'
    '-#'
    '  Nested Haml comment'
    '  - raise '#39'dead'#39
    '#name'
    '  - for i in test'
    '    %p{ "test" } @var')
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Id'
    'Symbol'
    'String'
    'Number'
    '1Tag'
    '1TagProp'
    '1Symbol')
  Extentions = 'haml'
  LexerName = 'Haml'
  SkipSpaces = False
  Notes.Strings = (
    'Alex (Synwrite)')
  LineComment = '/ '
  Charset = DEFAULT_CHARSET
end
