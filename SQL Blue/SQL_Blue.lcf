object SyntAnal113: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Default'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clYellow
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 8650752
      FormatType = ftCustomFont
    end
    item
      DisplayName = 'Identifier'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clYellow
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 8650752
    end
    item
      DisplayName = 'Reserved word'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clWhite
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 8650752
      FormatFlags = [ffBold, ffItalic, ffUnderline, ffStrikeOut, ffReadOnly, ffHidden]
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clLime
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 8650752
    end
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 8650752
      FormatType = ftColor
    end
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clWhite
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 8650752
      FormatFlags = [ffBold, ffItalic, ffUnderline, ffStrikeOut, ffReadOnly, ffHidden]
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = 33023
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
      BgColor = 8650752
    end
    item
      DisplayName = 'Marked block'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clHighlightText
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 10841427
      FormatType = ftColor
    end
    item
      DisplayName = 'Section'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clWhite
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 8650752
      FormatFlags = [ffBold, ffItalic, ffUnderline, ffStrikeOut, ffReadOnly, ffHidden]
    end
    item
      DisplayName = 'Current line'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clWindowText
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 12648448
      FormatType = ftBackGround
    end
    item
      DisplayName = 'Parameter'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clFuchsia
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
      BgColor = 8650752
      FormatFlags = [ffBold, ffItalic, ffUnderline, ffStrikeOut, ffReadOnly, ffHidden]
    end
    item
      DisplayName = 'function'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clAqua
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 8650752
      FormatFlags = [ffBold, ffItalic, ffUnderline, ffStrikeOut, ffReadOnly, ffHidden]
    end
    item
      DisplayName = 'Datatype'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clAqua
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 8650752
      FormatFlags = [ffBold, ffItalic, ffUnderline, ffStrikeOut, ffReadOnly, ffHidden]
    end>
  TokenRules = <
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 4
      Expression = #39'.*?('#39'|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Any name'
      StyleName = 'Identifier'
      TokenType = 2
      Expression = '([a-z_]\w*)|(".*?("|$))'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Float'
      StyleName = 'Number'
      TokenType = 6
      Expression = '\d+\.?\d+e[\+\-]?\d+|\d+\.\d+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Integer'
      StyleName = 'Number'
      TokenType = 5
      Expression = '\d+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '(?s)/\*.*?(\*/|\Z)'#13#10
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment single line'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '//.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 3
      Expression = '[/,\.;:\(\)=<>\+\-\*]+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Parameter'
      StyleName = 'Parameter'
      Expression = 
        '@([_a-zA-Z\d\-]+|[_a-zA-Z\d\-]+(:String|:Date|:Integer|:Float|:B' +
        'oolean|:Script))@'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'Section keys'
      StyleName = 'Section'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'alter'
            'create'
            'drop'
            'from'
            'group'
            'having'
            'insert'
            'order'
            'select'
            'update'
            'where')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      TokenType = 7
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Key words'
      StyleName = 'Reserved word'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'access'
            'add'
            'all'
            'alter'
            'and'
            'any'
            'as'
            'asc'
            'avg'
            'between'
            'by'
            'case'
            'compressonly'
            'connect'
            'count'
            'create'
            'dba'
            'delete'
            'desc'
            'distinct'
            'drop'
            'else'
            'exists'
            'grant'
            'in'
            'index'
            'inner'
            'insert'
            'into'
            'is'
            'join'
            'left'
            'like'
            'limit'
            'local'
            'max'
            'memory'
            'min'
            'not'
            'null'
            'on'
            'option'
            'or'
            'outer'
            'reference'
            'remove'
            'rename'
            'resource'
            'revoke'
            'set'
            'shrink'
            'some'
            'synonym'
            'table'
            'temporary'
            'then'
            'to'
            'truncateonly'
            'union'
            'update'
            'view'
            'when')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'owner.table@remotedb'
      BlockName = 'from'
      ConditionList = <>
      NameFmt = '%s-1%s-2%s-3%s-4%s-5'
      GroupFmt = 'Tables'
      HighlightPos = cpAny
      NoEndRule = True
      GrammaRuleName = 'Table3'
      TreeItemImage = 1
      TreeGroupImage = 0
      IgnoreAsParent = False
    end
    item
      DisplayName = 'owner.table'
      BlockName = 'from'
      ConditionList = <>
      NameFmt = '%s-1%s-2%s-3'
      GroupFmt = 'Tables'
      HighlightPos = cpAny
      NoEndRule = True
      GrammaRuleName = 'Table2'
      TreeItemImage = 1
      TreeGroupImage = 0
      IgnoreAsParent = False
    end
    item
      DisplayName = 'table'
      BlockName = 'from'
      ConditionList = <
        item
          TokenTypes = 4
        end
        item
          CondType = tcNotEqual
          TokenTypes = 4
        end>
      NameFmt = '%s-1'
      GroupFmt = 'Tables'
      RefToCondEnd = True
      HighlightPos = cpAny
      NoEndRule = True
      GrammaRuleName = 'Table'
      TreeItemImage = 1
      TreeGroupImage = 0
      IgnoreAsParent = False
    end
    item
      DisplayName = 'alias'
      BlockName = 'from'
      ConditionList = <
        item
          TokenTypes = 4
        end
        item
          TokenTypes = 4
        end>
      NotCollapsed = True
      NameFmt = 'Alias = ( %s-1 )'
      RefToCondEnd = True
      HighlightPos = cpAny
      NoEndRule = True
      GrammaRuleName = 'Alias'
      TreeItemImage = 1
      TreeGroupImage = 0
      IgnoreAsParent = False
    end
    item
      DisplayName = 'End section'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TokenTypes = 128
        end>
      BlockOffset = 1
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'from'
      ConditionList = <
        item
          TagList.Strings = (
            'from')
          TokenTypes = 128
          IgnoreCase = True
        end>
      BlockEnd = 'End section'
      EndOfTextClose = True
      HighlightPos = cpAny
      CancelNextRules = True
      CollapseFmt = '%s0 ...'
      TreeItemImage = 2
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Start section'
      StatesAbsent = 1
      ConditionList = <
        item
          TokenTypes = 128
        end>
      BlockEnd = 'End section'
      EndOfTextClose = True
      HighlightPos = cpAny
      CollapseFmt = '%s0 ...'
      TreeItemImage = 2
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Comment start'
      BlockName = 'Comment start'
      NotParent = True
      ConditionList = <
        item
          TokenTypes = 2
        end>
      BlockEnd = 'Comment end'
      DisplayInTree = False
      HighlightPos = cpAny
      CollapseFmt = '/* ... */'
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Comment end'
      BlockName = 'Comment start'
      BlockType = btRangeEnd
      ConditionList = <
        item
          CondType = tcNotEqual
          TokenTypes = 2
        end>
      BlockOffset = 1
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'functions'
      StyleName = 'function'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            '(')
          TokenTypes = 8
        end
        item
          TagList.Strings = (
            'ABS'
            'ACOS'
            'ADD_DAYS'
            'ADD_HOURS'
            'ADD_MINS'
            'ADD_MONTHS'
            'ADD_SECS'
            'ADD_YEARS'
            'ASCII'
            'ASIN'
            'ATAN'
            'ATAN2'
            'ATOF'
            'BLOBLEN'
            'CAST'
            'CEILING'
            'CHAR'
            'CHAR_LENGTH'
            'CHARACTER_LENGTH'
            'CHECKMEDIATYPE'
            'CONCAT'
            'COS'
            'COSH'
            'COT'
            'CURDATE'
            'CURRENT_DATE'
            'CURRENT_TIME'
            'CURRENT_TIMESTAMP'
            'CURRENT_USER'
            'CURTIME'
            'DATABASE'
            'DATEPART'
            'DAYNAME'
            'DAYOFMONTH'
            'DAYOFWEEK'
            'DAYOFYEAR'
            'DAYS_BETWEEN'
            'DEGREES'
            'DMLIC'
            'EXP'
            'FILEEXIST'
            'FILELEN'
            'FILENAME'
            'FIX'
            'FLOOR'
            'FREXPE'
            'FREXPM'
            'FTOA'
            'HIGHLIGHT'
            'HITCOUNT'
            'HITPOS'
            'HMS'
            'HOUR'
            'HTMLHIGHLIGHT'
            'HTMLTITLE'
            'HYPOT'
            'INSERT'
            'INVDATE'
            'INVTIME'
            'INVTIMESTAMP'
            'LAST_DAY'
            'LCASE'
            'LDEXP'
            'LEFT'
            'LENGTH'
            'LOCATE'
            'LOG'
            'LOG10'
            'LOWER'
            'LTRIM'
            'MDY'
            'MINUTE'
            'MOD'
            'MODFI'
            'MODFM'
            'MONTH'
            'MONTHNAME'
            'NEXT_DAY'
            'NOW'
            'PI'
            'POSITION'
            'POW'
            'QUARTER'
            'RADIANS'
            'RAND'
            'REPEAT'
            'REPLACE'
            'RIGHT'
            'RND'
            'ROUND'
            'RTRIM'
            'SECOND'
            'SECS_BETWEEN'
            'SESSION_USER'
            'SIGN'
            'SIN'
            'SINH'
            'SPACE'
            'SQRT'
            'STRTOINT'
            'SUBBLOB'
            'SUBBLOBTOBIN'
            'SUBBLOBTOCHAR'
            'SUBSTRING'
            'TAN'
            'TANH'
            'TIMEPART'
            'TIMESTAMPADD'
            'TIMESTAMPDIFF'
            'TO_DATE'
            'TRIM'
            'UCASE'
            'UPPER'
            'USER'
            'WEEK'
            'YEAR')
          TokenTypes = 4
          IgnoreCase = True
        end>
      IdentIndex = 1
      HighlightPos = cpAny
      TokenType = 9
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Datatype'
      StyleName = 'Datatype'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'binary'
            'char'
            'date'
            'decimal'
            'double'
            'file'
            'float'
            'integer'
            'long'
            'oid'
            'serial'
            'smallint'
            'time'
            'timestap'
            'varchar')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Reset states'
      StatesRemove = 15
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            ';')
          TokenTypes = 8
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'GRANT'
      StyleName = 'Reserved word'
      StatesAdd = 1
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'grant')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'End of single statement'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            ';')
          TokenTypes = 8
        end>
      BlockEnd = 'Start section'
      HighlightPos = cpAny
      IgnoreAsParent = False
    end>
  CodeTemplates = <
    item
      Name = 'select'
      Description = 'select statement'
      Code.Strings = (
        'select * from ')
      Advanced = True
    end>
  SubAnalyzers = <>
  SampleText.Strings = (
    '/* '
    '  Multiline comments'
    '*/'
    'SELECT '
    '   CustomerId, CustomerFirstName, CustomerLastName'
    'FROM '
    '   Customers '
    'WHERE NOT City IN ( '#39'London'#39', '#39'San Jose'#39' )'
    
      '       AND (Staff > 5) AND substring(State,1,10) = @STATE_PIPPO@' +
      ';'
    '       // ORDER BY CustomerFirstName,CustomerLastName'
    '       '
    '       '
    '       '
    'GRANT SELECT ON "@COMPETENCE:script@%" TO "@UTENTE:script@";'
    ' '
    'GRANT SELECT ON "TAB_%" TO "@UTENTE:script@";'
    ''
    'select left(tab1.field, 2) from tab1'
    'left join tab2 on tab1.field = tab2.field;'
    '        '
    '')
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Identifier'
    'Symbol'
    'String'
    'Integer const'
    'Float const'
    'Section'
    'Keyword')
  MarkedBlockStyle = 'Marked block'
  CurrentLineStyle = 'Current line'
  DefaultStyleName = 'Default'
  Extentions = 'sql'
  LexerName = 'SQL Blue'
  Internal = True
  Charset = DEFAULT_CHARSET
  Left = 144
  Top = 184
end
