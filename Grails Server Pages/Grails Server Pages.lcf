object SyntAnal7: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'Tag bracket'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Tag name'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Tag prop'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clPurple
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Keyword'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Var'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGreen
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'String regex'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Block ${...} BG'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clWindowText
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = clMoneyGreen
      FormatType = ftBackGround
    end
    item
      DisplayName = 'Block <%...%> BG'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clWindowText
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = clSkyBlue
      FormatType = ftBackGround
    end>
  TokenRules = <
    item
      DisplayName = 'Comment HTML'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '(?s)<!--.*?(-->|\Z)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment HTML doc type'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '(?-i)<!DOCTYPE\b.*?>'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment JS block'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '(?s)/\*.*?(\*/|\Z)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment JS line'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '//.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment GSP'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '(?s)%\{\-\-.*?(\-\-\}%|\Z)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment JSP'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '(?s)<%\-\-.*?(\-\-%>|\Z)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Tag bracket'
      StyleName = 'Tag bracket'
      TokenType = 6
      Expression = '<%[=@!]?|</?|[/%]?>'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Tag name'
      StyleName = 'Tag name'
      TokenType = 7
      Expression = '(?<=</?)[a-z_][\w:]*\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 4
      Expression = '(["'#39'])(\\.|.)*?(\1|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String Regex'
      StyleName = 'String regex'
      TokenType = 10
      Expression = 
        '(?-i)(?<=[=\(\[&!:/>\?\+,\{\}`]\x20*) / (\\/|\\\\|\[.+?\]|.)*? /' +
        '[gimysu]* |'#13#10'(?-i)(?<=^\x20*)                / (\\/|\\\\|\[.+?\]' +
        '|.)*? /[gimysu]* |'#13#10'(?-i)(?<=\bcase\x20*)           / (\\/|\\\\|' +
        '\[.+?\]|.)*? /[gimysu]* |'#13#10'(?-i)(?<=\breturn\x20*)         / (\\' +
        '/|\\\\|\[.+?\]|.)*? /[gimysu]* |'#13#10'(?-i)(?<=\bawait\x20*)        ' +
        '  / (\\/|\\\\|\[.+?\]|.)*? /[gimysu]* |'#13#10'(?-i)(?<=\binstanceof\x' +
        '20*)     / (\\/|\\\\|\[.+?\]|.)*? /[gimysu]* |'#13#10'(?-i)(?<=\bgoto\' +
        'x20*)           / (\\/|\\\\|\[.+?\]|.)*? /[gimysu]* |'#13#10'(?-i)(?<=' +
        '\bin\x20*)             / (\\/|\\\\|\[.+?\]|.)*? /[gimysu]* |'#13#10'(?' +
        '-i)(?<=\bof\x20*)             / (\\/|\\\\|\[.+?\]|.)*? /[gimysu]' +
        '*'#13#10
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Var'
      StyleName = 'Var'
      TokenType = 9
      Expression = '\$\{[a-z_]\w*\}'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 3
      Expression = '\$\{|[=\.,;:\[\]\(\)\{\}\?/\-\+!~]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Tag prop'
      StyleName = 'Tag prop'
      TokenType = 8
      Expression = '[a-z_]\w*(?==)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      TokenType = 2
      Expression = '[a-z_]\w*\b'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'Keyword JS'
      StyleName = 'Keyword'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'def'
            'else'
            'for'
            'function'
            'if'
            'new'
            'null'
            'return'
            'var')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '${'
      StyleName = 'Block ${...} BG'
      ConditionList = <
        item
          TagList.Strings = (
            '${')
          TokenTypes = 8
        end>
      BlockEnd = '}'
      NotCollapsed = True
      DisplayInTree = False
      DynHighlight = dhRange
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '}'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            '}')
          TokenTypes = 8
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '<%'
      StyleName = 'Block <%...%> BG'
      ConditionList = <
        item
          TagList.Strings = (
            '<%'
            '<%!'
            '<%=')
          TokenTypes = 64
        end>
      BlockEnd = '%>'
      NotCollapsed = True
      DisplayInTree = False
      DynHighlight = dhRange
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '%>'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            '%>')
          TokenTypes = 64
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    '<%@ page import="java.util.List" %>'
    ''
    '<!DOCTYPE html>'
    ''
    '<html>'
    '<head>'
    '    <title>Title</title>'
    ''
    '    <g:javascript>'
    '        function test() {'
    
      '            var s = "<g:if test="${var}">value</g:if>"; // Not w' +
      'orth fixing?'
    '            var a = 3;'
    '            return a;'
    '        }'
    '        ${[a: groovyVar, b: 5, c: new com.package.Class(arg)]}'
    
      '        <%= [a: groovyVar, b: 5, c: new com.package.Class(arg)] ' +
      '%>'
    '    </g:javascript>'
    '<head>'
    '</html>')
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Id'
    'Symbol'
    'String'
    'Number'
    'Tag bracket'
    'Tag name'
    'Tag prop'
    'Var'
    'String regex')
  Extentions = 'gsp'
  LexerName = 'Grails Server Pages'
  Notes.Strings = (
    'Alexey Torgashin (CudaText)')
  RestartFromLineStart = True
  LineComment = '//'
  Charset = DEFAULT_CHARSET
end
