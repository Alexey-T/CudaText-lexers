object SyntAnal53: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Marked block'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clHighlightText
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = clHighlight
      FormatType = ftColor
    end
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id command'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Id var'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end>
  TokenRules = <
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '(^!|\s!|\#!).*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 4
      Expression = '"(\\"|.)*?("|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id var'
      StyleName = 'Id var'
      TokenType = 2
      Expression = '\$[\w-]+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Block : begin'
      StyleName = 'Symbol'
      TokenType = 8
      Expression = '^:'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Block other begin'
      StyleName = 'Id command'
      TokenType = 9
      Expression = '^\w+ (?=\:)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      TokenType = 2
      Expression = '[a-z_][\w-]*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 3
      Expression = '[/\*,\.;:\(\)=<>\+\-\[\]\{\}%\?]+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Float'
      StyleName = 'Number'
      TokenType = 7
      Expression = '(\d+ \.)? \d+ e [\+\-]? \d+ |'#13#10'\d+\.\d+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Hex'
      StyleName = 'Number'
      TokenType = 6
      Expression = '0x[\da-f]+ |'#13#10'0o[0-7]+ |'#13#10'0b[01]+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Integer'
      StyleName = 'Number'
      TokenType = 5
      Expression = '\d+'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'Block comment'
      Enabled = False
      BlockName = 'Block comment'
      NotParent = True
      ConditionList = <
        item
          TokenTypes = 2
        end>
      BlockEnd = 'Block comment end'
      EndOfTextClose = True
      DisplayInTree = False
      RefToCondEnd = True
      HighlightPos = cpBound
      CollapseFmt = '...'
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Block comment end'
      Enabled = False
      BlockType = btRangeEnd
      ConditionList = <
        item
          CondType = tcNotEqual
          TokenTypes = 2
        end
        item
          TokenTypes = 2
        end>
      BlockEnd = 'Block comment'
      RefToCondEnd = True
      HighlightPos = cpBound
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Keyw'
      StyleName = 'Id command'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'f'
            't')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '{'
      ConditionList = <
        item
          TagList.Strings = (
            '{')
          TokenTypes = 8
        end>
      BlockEnd = '}'
      DisplayInTree = False
      HighlightPos = cpAny
      DrawStaple = True
      IgnoreAsParent = False
    end
    item
      DisplayName = '}'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            '}')
          TokenTypes = 8
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '['
      ConditionList = <
        item
          TagList.Strings = (
            '[')
          TokenTypes = 8
        end>
      BlockEnd = ']'
      DisplayInTree = False
      HighlightPos = cpAny
      DrawStaple = True
      IgnoreAsParent = False
    end
    item
      DisplayName = ']'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            ']')
          TokenTypes = 8
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = ';'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            ';')
          TokenTypes = 8
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = ':'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            ':')
          TokenTypes = 8
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'block :'
      ConditionList = <
        item
          TokenTypes = 256
        end>
      BlockEnd = ';'
      NameFmt = '%sz0'
      RefToCondEnd = True
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'block ending with ;'
      ConditionList = <
        item
          TagList.Strings = (
            'DESCRIPTIVE'
            'M'
            'MACRO'
            'MEMO'
            'SINGLETONS'
            'SYMBOLS'
            'TUPLE'
            'TYPED')
          TokenTypes = 512
        end>
      BlockEnd = ';'
      NameFmt = '%sz0'
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'block ending with :'
      ConditionList = <
        item
          TagList.Strings = (
            'C'
            'GENERIC'
            'SINGLETON'
            'SYMBOL')
          TokenTypes = 512
        end>
      BlockEnd = ':'
      NameFmt = '%sz0'
      HighlightPos = cpAny
      SelfClose = True
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    '!Text'
    '!Text'
    '!Text'
    'USING: test'
    'SYNTAX: D: parse-decimal suffix! ;'
    'print ; ! Just print the passed string'
    ''
    'SYMBOL: g1'
    '"test"'
    '10 + 0b10 + 0o10 + 0x10'
    '1.2 1e2 1.1e+2'
    '{'
    ' ['
    ' ]'
    '}'
    ''
    ': <start-f> ( -- ) '
    '  drop ;'
    '  '
    'MACRO: <name> ( -- ) '
    '  drop ;')
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Identifier'
    'Symbol'
    'String'
    'Integer const'
    'Hex const'
    'Float const'
    'Block :'
    'Block other')
  MarkedBlockStyle = 'Marked block'
  Extentions = 'factor'
  LexerName = 'Factor'
  SkipSpaces = False
  Notes.Strings = (
    'Author: Alex, uvviewsoft.com'
    'Ref:'
    'http://docs.factorcode.org/content/article-handbook.html'
    'Test:'
    'http://concatenative.org/wiki/view/Factor/Examples')
  LineComment = '! '
  Charset = DEFAULT_CHARSET
end
