object SyntAnal22: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Tag symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Tag prop'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = 47360
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Tag id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = 16744448
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Sublexer BG'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNone
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 14804688
      FormatType = ftBackGround
    end
    item
      DisplayName = 'Color'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Entity'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clRed
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Keyword'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Modifier'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Var'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGreen
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Tag id bad'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BorderTypeBottom = blSolid
      BorderColorBottom = clRed
    end
    item
      DisplayName = 'Tag class name'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clPurple
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end>
  TokenRules = <
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '(?ms)<!--.*?(-->|\Z)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment end'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '-->'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '<'
      StyleName = 'Tag symbol'
      BlockName = '{'
      NotParent = True
      TokenType = 10
      Expression = '<[/!\-]*(?=\w)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '>'
      StyleName = 'Tag symbol'
      BlockName = '{'
      NotParent = True
      TokenType = 11
      Expression = '/?>'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Number'
      StyleName = 'Number'
      TokenType = 5
      Expression = '\d+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Color'
      StyleName = 'Color'
      TokenType = 7
      Expression = '\#([0-9a-f]{3}|[0-9a-f]{6})\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 4
      Expression = '(?s) ("|'#39') (\\\1|.)*? (\1|\Z)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Tag id class'
      StyleName = 'Tag class name'
      TokenType = 2
      Expression = '(?-i)(?<=</?)[A-Z]\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Tag id svelte:nn'
      StyleName = 'Tag id'
      TokenType = 2
      Expression = '(?<=</?)svelte:[\w\-:\.]+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Tag id'
      StyleName = 'Tag id bad'
      TokenType = 2
      Expression = '(?<=</?)[\w\-:\.]+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      BlockName = '{'
      TokenType = 8
      Expression = '[a-z_]\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Var'
      StyleName = 'Var'
      TokenType = 6
      Expression = '\$+[a-z_]\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Entity'
      StyleName = 'Entity'
      Expression = '&\#?\w+;'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      BlockName = '{'
      TokenType = 3
      Expression = '[\(\)\[\]<>\-\+/\*=\.,:!@]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '{'
      StyleName = 'Symbol'
      TokenType = 12
      Expression = '\{[\#:/]?'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '}'
      StyleName = 'Symbol'
      TokenType = 13
      Expression = '\}'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol HTML'
      StyleName = 'Tag symbol'
      Expression = '[=:\+\-]'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'Keyword'
      StyleName = 'Keyword'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'as'
            'await'
            'catch'
            'each'
            'else'
            'if'
            'key'
            'then'
            'typeof')
          TokenTypes = 256
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Modifier'
      StyleName = 'Modifier'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'capture'
            'nonpassive'
            'once'
            'passive'
            'preventDefault'
            'self'
            'stopPropagation')
          TokenTypes = 256
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Tag prop'
      StyleName = 'Tag prop'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            '=')
          TokenTypes = 8
        end
        item
          TokenTypes = 4
        end>
      IdentIndex = 1
      HighlightPos = cpBound
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Tag ids'
      StyleName = 'Tag id'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'abbr'
            'acronym'
            'address'
            'applet'
            'area'
            'article'
            'aside'
            'audio'
            'b'
            'base'
            'basefont'
            'bdi'
            'bdo'
            'big'
            'blockquote'
            'br'
            'button'
            'canvas'
            'caption'
            'center'
            'cite'
            'code'
            'datalist'
            'dd'
            'del'
            'details'
            'dfn'
            'dialog'
            'dir'
            'div'
            'dl'
            'dt'
            'em'
            'figcaption'
            'figure'
            'font'
            'footer'
            'form'
            'frame'
            'frameset'
            'h1'
            'h2'
            'h3'
            'h4'
            'h5'
            'h6'
            'head'
            'header'
            'hr'
            'html'
            'i'
            'iframe'
            'img'
            'input'
            'ins'
            'isindex'
            'kbd'
            'label'
            'legend'
            'li'
            'link'
            'map'
            'mark'
            'menu'
            'menuitem'
            'meta'
            'meter'
            'nav'
            'noframes'
            'noscript'
            'object'
            'ol'
            'optgroup'
            'option'
            'output'
            'p'
            'param'
            'picture'
            'pre'
            'progress'
            'q'
            'rp'
            'rt'
            'rtc'
            'ruby'
            's'
            'samp'
            'script'
            'section'
            'select'
            'slot'
            'small'
            'source'
            'span'
            'strike'
            'strong'
            'style'
            'sub'
            'summary'
            'sup'
            'template'
            'textarea'
            'time'
            'title'
            'track'
            'tt'
            'u'
            'ul'
            'var'
            'video'
            'wbr')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Colors'
      StyleName = 'Color'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'AliceBlue'
            'AntiqueWhite'
            'Aqua'
            'Aquamarine'
            'Azure'
            'Beige'
            'Bisque'
            'Black'
            'BlanchedAlmond'
            'Blue'
            'BlueViolet'
            'Brown'
            'BurlyWood'
            'CadetBlue'
            'Chartreuse'
            'Chocolate'
            'Coral'
            'CornflowerBlue'
            'Cornsilk'
            'Crimson'
            'Cyan'
            'DarkBlue'
            'DarkCyan'
            'DarkGoldenRod'
            'DarkGray'
            'DarkGreen'
            'DarkGrey'
            'DarkKhaki'
            'DarkMagenta'
            'DarkOliveGreen'
            'Darkorange'
            'DarkOrchid'
            'DarkRed'
            'DarkSalmon'
            'DarkSeaGreen'
            'DarkSlateBlue'
            'DarkSlateGray'
            'DarkSlateGrey'
            'DarkTurquoise'
            'DarkViolet'
            'DeepPink'
            'DeepSkyBlue'
            'DimGray'
            'DimGrey'
            'DodgerBlue'
            'FireBrick'
            'FloralWhite'
            'ForestGreen'
            'Fuchsia'
            'Gainsboro'
            'GhostWhite'
            'Gold'
            'GoldenRod'
            'Gray'
            'Green'
            'GreenYellow'
            'Grey'
            'HoneyDew'
            'HotPink'
            'IndianRed'
            'Indigo'
            'Ivory'
            'Khaki'
            'Lavender'
            'LavenderBlush'
            'LawnGreen'
            'LemonChiffon'
            'LightBlue'
            'LightCoral'
            'LightCyan'
            'LightGoldenRodYellow'
            'LightGray'
            'LightGreen'
            'LightGrey'
            'LightPink'
            'LightSalmon'
            'LightSeaGreen'
            'LightSkyBlue'
            'LightSlateGray'
            'LightSlateGrey'
            'LightSteelBlue'
            'LightYellow'
            'Lime'
            'LimeGreen'
            'Linen'
            'Magenta'
            'Maroon'
            'MediumAquaMarine'
            'MediumBlue'
            'MediumOrchid'
            'MediumPurple'
            'MediumSeaGreen'
            'MediumSlateBlue'
            'MediumSpringGreen'
            'MediumTurquoise'
            'MediumVioletRed'
            'MidnightBlue'
            'MintCream'
            'MistyRose'
            'Moccasin'
            'NavajoWhite'
            'Navy'
            'OldLace'
            'Olive'
            'OliveDrab'
            'Orange'
            'OrangeRed'
            'Orchid'
            'PaleGoldenRod'
            'PaleGreen'
            'PaleTurquoise'
            'PaleVioletRed'
            'PapayaWhip'
            'PeachPuff'
            'Peru'
            'Pink'
            'Plum'
            'PowderBlue'
            'Purple'
            'Red'
            'RosyBrown'
            'RoyalBlue'
            'SaddleBrown'
            'Salmon'
            'SandyBrown'
            'SeaGreen'
            'SeaShell'
            'Sienna'
            'Silver'
            'SkyBlue'
            'SlateBlue'
            'SlateGray'
            'SlateGrey'
            'Snow'
            'SpringGreen'
            'SteelBlue'
            'Tan'
            'Teal'
            'Thistle'
            'Tomato'
            'Turquoise'
            'Violet'
            'Wheat'
            'White'
            'WhiteSmoke'
            'Yellow'
            'YellowGreen')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '<'
      ConditionList = <
        item
          TokenTypes = 1024
        end>
      BlockEnd = '>'
      NotCollapsed = True
      DisplayInTree = False
      HighlightPos = cpRange
      DynSelectMin = True
      IgnoreAsParent = False
    end
    item
      DisplayName = '>'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TokenTypes = 2048
        end>
      HighlightPos = cpBound
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Tag start'
      ConditionList = <
        item
          TokenTypes = 4
        end
        item
          TagList.Strings = (
            '<')
          TokenTypes = 1024
        end>
      IdentIndex = -1
      BlockEnd = 'Tag end'
      DisplayInTree = False
      RefToCondEnd = True
      HighlightPos = cpAny
      CollapseFmt = '<%s-1>'
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Tag end'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TokenTypes = 2048
        end
        item
          TokenTypes = 4
        end
        item
          TagList.Strings = (
            '</')
          TokenTypes = 1024
        end>
      IdentIndex = -1
      SameIdent = True
      RefToCondEnd = True
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '{'
      ConditionList = <
        item
          TokenTypes = 4096
        end>
      BlockEnd = '}'
      NotCollapsed = True
      DisplayInTree = False
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '}'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TokenTypes = 8192
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '{#if'
      ConditionList = <
        item
          TokenTypes = 256
        end
        item
          TagList.Strings = (
            '{#')
          TokenTypes = 4096
        end>
      IdentIndex = -1
      BlockEnd = '{/if'
      DisplayInTree = False
      RefToCondEnd = True
      HighlightPos = cpAny
      DrawStaple = True
      CollapseFmt = '{# %s-1 }'
      IgnoreAsParent = False
    end
    item
      DisplayName = '{/if'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TokenTypes = 256
        end
        item
          TagList.Strings = (
            '{/')
          TokenTypes = 4096
        end>
      IdentIndex = -1
      SameIdent = True
      RefToCondEnd = True
      HighlightPos = cpAny
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <
    item
      DisplayName = 'CSS'
      StyleName = 'Sublexer BG'
      StartExpression = '<style(\x20lang=['#39'"]javascript['#39'"])?>'
      EndExpression = '</style>'
      SyntAnalyzer = SyntAnal6
    end
    item
      DisplayName = 'JS'
      StyleName = 'Sublexer BG'
      StartExpression = '<script>'
      EndExpression = '</script>'
      SyntAnalyzer = SyntAnal9
    end
    item
      DisplayName = 'SCSS'
      StyleName = 'Sublexer BG'
      StartExpression = '<style\x20lang=['#39'"]scss['#39'"]>'
      EndExpression = '</style>'
      SyntAnalyzer = SyntAnal20
    end
    item
      DisplayName = 'LESS'
      StyleName = 'Sublexer BG'
      StartExpression = '<style\x20lang=['#39'"]less['#39'"]>'
      EndExpression = '</style>'
      SyntAnalyzer = SyntAnal12
    end
    item
      DisplayName = 'TS'
      StyleName = 'Sublexer BG'
      StartExpression = '<script\x20lang=['#39'"]ts['#39'"]>'
      EndExpression = '</script>'
      SyntAnalyzer = SyntAnal23
    end>
  SampleText.Strings = (
    '<style>'
    '  body { background: #aabbee; }'
    '</style>'
    ''
    '<script>'
    'function aa(b, d) { return "test"; }'
    '</script>'
    ''
    '<script lang="ts">'
    '  export const hello: string = '#39'world'#39';'
    '</script>'
    ''
    '<div prop="string" prop=#aabbcc &nbsp; />'
    '<Widget foo={bar} answer={42} text="hello"/>'
    '<p>{a} + {b} = {a + b}.</p>'
    ''
    '{#if answer === 42}'
    #9'<p>what was the question?</p>'
    '{/if}'
    ''
    '{#await promise}'
    #9'<p>waiting for the promise to resolve...</p>'
    '{:then value}'
    #9'<p>The value is {value}</p>'
    '{:catch error}'
    #9'<p>Something went wrong: {error.message}</p>'
    '{/await}')
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Id Tag'
    'Symbol'
    'String'
    'Number'
    'Var'
    'Color'
    'Id'
    '--'
    '<'
    '>'
    '{'
    '}')
  Extentions = 'svelte svlt'
  LexerName = 'Svelte'
  Notes.Strings = (
    'Alexey (CudaText)')
  Charset = DEFAULT_CHARSET
end
