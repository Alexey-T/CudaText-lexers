object SyntAnal19: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Unit'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Var'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGreen
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Param'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id Function'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlue
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Class'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clPurple
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = '@Command'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clLime
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Color'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clRed
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Suffix'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clFuchsia
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Std word'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end>
  TokenRules = <
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '//.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment 2'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '(?s)/\* .*? (\*/|\Z)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Color'
      StyleName = 'Color'
      TokenType = 9
      Expression = '\#([0-9a-f]{3}|[0-9a-f]{6})\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Number'
      StyleName = 'Number'
      TokenType = 8
      Expression = '\d+(\.\d+)? | \.\d+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'CSS var'
      StyleName = 'Var'
      TokenType = 2
      Expression = '\-\-\w[\w\-]*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Class'
      StyleName = 'Class'
      Expression = '[\#\.]([\w\-]|\\.)+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Param'
      StyleName = 'Param'
      BlockName = '{'
      TokenType = 7
      Expression = '[\w\.-][\w\-\#\{\}\$]+ (?=\s*\:)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 4
      Expression = '("|'#39') .*? (\1|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Unit'
      StyleName = 'Unit'
      TokenType = 5
      Expression = '(?<=\d)[\w%]+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Var'
      StyleName = 'Var'
      TokenType = 2
      Expression = '\$\w[\w-]*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      TokenType = 6
      Expression = '(\-+[a-z]|[\w!])[\w\-\#\{\}\$]+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Suffix'
      StyleName = 'Suffix'
      TokenType = 6
      Expression = ':+[a-z][\w\-]*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 3
      Expression = '[;:,%\(\)\{\}\[\]<>\-\+\*~&\#/=\^]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Command'
      StyleName = '@Command'
      TokenType = 6
      Expression = '@[\w\-]+'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'Std Sass funcs'
      StyleName = 'Id Function'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'abs'
            'adjust-color'
            'adjust-hue'
            'alpha'
            'append'
            'blue'
            'calc'
            'ceil'
            'change-color'
            'comparable'
            'complement'
            'darken'
            'desaturate'
            'fade-in'
            'fade-out'
            'floor'
            'grayscale'
            'green'
            'hsl'
            'hsla'
            'hue'
            'if'
            'invert'
            'join'
            'length'
            'lighten'
            'lightness'
            'mix'
            'nth'
            'opacify'
            'opacity'
            'percentage'
            'quote'
            'red'
            'rgb'
            'rgba'
            'round'
            'saturate'
            'saturation'
            'scale-color'
            'transparentize'
            'type-of'
            'unit'
            'unitless'
            'unquote')
          TokenTypes = 64
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Std CSS funcs'
      StyleName = 'Id Function'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'annotation'
            'attr'
            'blur'
            'brightness'
            'character'
            'clamp'
            'content'
            'contrast'
            'counter'
            'counters'
            'cross'
            'drop'
            'element'
            'fade'
            'fit'
            'format'
            'grayscale'
            'hue'
            'image'
            'invert'
            'local'
            'max'
            'min'
            'minmax'
            'opacity'
            'ornaments'
            'repeat'
            'rotate'
            'saturate'
            'sepia'
            'set'
            'shadow'
            'styleset'
            'stylistic'
            'swash'
            'symbols'
            'url'
            'variant')
          TokenTypes = 64
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Std values'
      StyleName = 'Std word'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            '!global'
            '!important'
            'and'
            'inherit'
            'none'
            'not'
            'or')
          TokenTypes = 64
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Std colors'
      StyleName = 'Color'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'activetext'
            'AliceBlue'
            'AntiqueWhite'
            'Aqua'
            'Aquamarine'
            'Azure'
            'Beige'
            'Bisque'
            'Black'
            'BlanchedAlmond'
            'Blue'
            'BlueViolet'
            'Brown'
            'BurlyWood'
            'buttonborder'
            'buttonface'
            'buttontext'
            'CadetBlue'
            'canvas'
            'canvastext'
            'Chartreuse'
            'Chocolate'
            'Coral'
            'CornflowerBlue'
            'Cornsilk'
            'Crimson'
            'currentcolor'
            'Cyan'
            'DarkBlue'
            'DarkCyan'
            'DarkGoldenRod'
            'DarkGray'
            'DarkGreen'
            'DarkGrey'
            'DarkKhaki'
            'DarkMagenta'
            'DarkOliveGreen'
            'Darkorange'
            'DarkOrchid'
            'DarkRed'
            'DarkSalmon'
            'DarkSeaGreen'
            'DarkSlateBlue'
            'DarkSlateGray'
            'DarkSlateGrey'
            'DarkTurquoise'
            'DarkViolet'
            'DeepPink'
            'DeepSkyBlue'
            'DimGray'
            'DimGrey'
            'DodgerBlue'
            'field'
            'fieldtext'
            'FireBrick'
            'FloralWhite'
            'ForestGreen'
            'Fuchsia'
            'Gainsboro'
            'GhostWhite'
            'Gold'
            'GoldenRod'
            'Gray'
            'graytext'
            'Green'
            'GreenYellow'
            'Grey'
            'highlight'
            'highlighttext'
            'HoneyDew'
            'HotPink'
            'IndianRed'
            'Indigo'
            'Ivory'
            'Khaki'
            'Lavender'
            'LavenderBlush'
            'LawnGreen'
            'LemonChiffon'
            'LightBlue'
            'LightCoral'
            'LightCyan'
            'LightGoldenRodYellow'
            'LightGray'
            'LightGreen'
            'LightGrey'
            'LightPink'
            'LightSalmon'
            'LightSeaGreen'
            'LightSkyBlue'
            'LightSlateGray'
            'LightSlateGrey'
            'LightSteelBlue'
            'LightYellow'
            'Lime'
            'LimeGreen'
            'Linen'
            'linktext'
            'Magenta'
            'mark'
            'marktext'
            'Maroon'
            'MediumAquaMarine'
            'MediumBlue'
            'MediumOrchid'
            'MediumPurple'
            'MediumSeaGreen'
            'MediumSlateBlue'
            'MediumSpringGreen'
            'MediumTurquoise'
            'MediumVioletRed'
            'MidnightBlue'
            'MintCream'
            'MistyRose'
            'Moccasin'
            'NavajoWhite'
            'Navy'
            'OldLace'
            'Olive'
            'OliveDrab'
            'Orange'
            'OrangeRed'
            'Orchid'
            'PaleGoldenRod'
            'PaleGreen'
            'PaleTurquoise'
            'PaleVioletRed'
            'PapayaWhip'
            'PeachPuff'
            'Peru'
            'Pink'
            'Plum'
            'PowderBlue'
            'Purple'
            'RebeccaPurple'
            'Red'
            'RosyBrown'
            'RoyalBlue'
            'SaddleBrown'
            'Salmon'
            'SandyBrown'
            'SeaGreen'
            'SeaShell'
            'Sienna'
            'Silver'
            'SkyBlue'
            'SlateBlue'
            'SlateGray'
            'SlateGrey'
            'Snow'
            'SpringGreen'
            'SteelBlue'
            'Tan'
            'Teal'
            'Thistle'
            'Tomato'
            'Transparent'
            'Turquoise'
            'Violet'
            'visitedtext'
            'Wheat'
            'White'
            'WhiteSmoke'
            'Yellow'
            'YellowGreen')
          TokenTypes = 64
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '{'
      ConditionList = <
        item
          TagList.Strings = (
            '{')
          TokenTypes = 8
        end>
      BlockEnd = '}'
      Highlight = True
      InvertColors = True
      NameFmt = '%sl0'
      RefToCondEnd = True
      DynHighlight = dhRange
      HighlightPos = cpRange
      DynSelectMin = True
      CancelNextRules = True
      DrawStaple = True
      CollapseFmt = '{ ... }'
      IgnoreAsParent = False
      AutoCloseText = '}'#13#10
    end
    item
      DisplayName = '}'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            '}')
          TokenTypes = 8
        end>
      BlockEnd = '{'
      HighlightPos = cpBound
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    '/* comment'
    '*/'
    '[data-name="text-color"][data-value="null"] '
    '.legit-class\@sm {'
    '  color: rgb(50%, 100%, 0) !global not-allowed;'
    '  &:hover { color: #FF0 red }'
    '  margin: url("http://a.com") fade(0); '
    '  animation-delay:-0.5s;'
    '}'
    ''
    '@mixin rounded-top {'
    '  $radius: 10px;'
    '  border-#{$side}-radius: $radius;'
    '  -moz-border-radius-#{$side}: $radius;'
    '}'
    ''
    '#name .name li { '
    '  @include rounded-top;'
    '}')
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Var'
    'Symbol'
    'String'
    'Unit'
    'Id'
    'Param'
    'Number'
    'Color')
  Extentions = 'scss scss.erb'
  LexerName = 'SCSS'
  Notes.Strings = (
    'Alexey (CudaText)'
    'Test: http://sass-lang.com/tutorial.html'
    
      'Func list: http://sass-lang.com/docs/yardoc/Sass/Script/Function' +
      's.html')
  LineComment = '//'
  Charset = DEFAULT_CHARSET
end
