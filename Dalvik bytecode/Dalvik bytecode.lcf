object SyntAnal7: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Directive'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Prefix'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlue
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Label'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clRed
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'L-path'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGreen
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Command'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id after arrow'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clPurple
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id modifier'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end>
  TokenRules = <
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '\#.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'L-path'
      StyleName = 'L-path'
      TokenType = 9
      Expression = '(?-i)\bI?L[\w\-/\$]+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id command'
      StyleName = 'Command'
      TokenType = 10
      Expression = '(?<=^[\x20\x09]*)[a-z_][\w\$\-/]*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Directive'
      StyleName = 'Directive'
      TokenType = 6
      Expression = '(?-i)\.end\x20[a-z][\w\-]* |'#13#10'\.[a-z_][\w\-]*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Prefix'
      StyleName = 'Prefix'
      TokenType = 7
      Expression = '[a-z_\$][\w\$]*:'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Label'
      StyleName = 'Label'
      TokenType = 8
      Expression = '(?<![\w"]):[a-z_][\w\$]*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id after arrow'
      StyleName = 'Id after arrow'
      TokenType = 11
      Expression = '(?<=\->)[a-z_][\w\$]*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      TokenType = 2
      Expression = '[a-z_\$][\w\$\-]*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 3
      Expression = '\-> | [\.,/\\=;:\-\+\*\(\)\[\]\{\}<>!~\|\^&]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Number'
      StyleName = 'Number'
      TokenType = 5
      Expression = '(?-i)\d+\.\d+[f]? | '#13#10'(?-i)0[xX]\h+[tSLl]? |'#13#10'(?-i)\d+[tSLl]?'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 4
      Expression = '"(\\.|.)*?("|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Char'
      StyleName = 'String'
      TokenType = 4
      Expression = #39'.*?'#39
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'keywords'
      StyleName = 'Directive'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'false'
            'null'
            'true')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'modifiers'
      StyleName = 'Id modifier'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'abstract'
            'enum'
            'final'
            'interface'
            'native'
            'private'
            'protected'
            'public'
            'static'
            'strictfp'
            'synchronized'
            'synthetic'
            'transient'
            'volatile')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'method begin'
      ConditionList = <
        item
          TokenTypes = 4
        end
        item
          TagList.Strings = (
            '.method')
          TokenTypes = 64
        end>
      BlockEnd = 'method end'
      NameFmt = '%sz0'
      RefToCondEnd = True
      HighlightPos = cpAny
      CollapseFmt = '%sz0'
      IgnoreAsParent = False
    end
    item
      DisplayName = 'method end'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            '.end method')
          TokenTypes = 64
        end>
      RefToCondEnd = True
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'annot begin'
      ConditionList = <
        item
          TokenTypes = 4
        end
        item
          TagList.Strings = (
            '.annotation')
          TokenTypes = 64
        end>
      BlockEnd = 'annot end'
      NameFmt = '%sz0'
      RefToCondEnd = True
      HighlightPos = cpAny
      CollapseFmt = '%sz0'
      IgnoreAsParent = False
    end
    item
      DisplayName = 'annot end'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            '.end annotation')
          TokenTypes = 64
        end>
      RefToCondEnd = True
      HighlightPos = cpAny
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    
      '.method public static final main([ILjava/lang/String;)[Ljava/lan' +
      'g;'
    '  fill-array-data v0, :array_0'
    '  .param p0, 0xFFt + 2.2f + 12 + '#39'A'#39' ->SomeName() + false'
    '  .param p512, "I can \"escape\" string\n properly!"'
    ''
    '  .prologue # comment test'
    '  .local v0, "allSettings":Ljava/util/Map;'
    
      '  .local v2, "entry":Ljava/util/Map$Entry;, "Ljava/util/Map$Entr' +
      'y<Ljava/lang/String;Ljava/lang/String;>;"'
    ''
    
      '  .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :cat' +
      'ch_0'
    '  .catchall {:try_start_1e .. :try_end_2d} :catchall_38'
    '  :someLabel'
    '.end method')
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Id'
    'Symbol'
    'String'
    'Number'
    'Directive'
    'Prefix'
    'Label'
    'L'
    'Command'
    'Id after arrow')
  Extentions = 'smali'
  LexerName = 'Dalvik bytecode'
  RestartFromLineStart = True
  LineComment = '#'
  Charset = DEFAULT_CHARSET
end
