keyword abstract
keyword as
keyword break
keyword case
keyword catch
keyword class
keyword const
keyword constructor
keyword continue
keyword debugger
keyword declare
keyword default
keyword delete
keyword do
keyword else
keyword export
keyword extends
keyword finally
keyword for
keyword from
keyword function
keyword get
keyword if
keyword implements
keyword import
keyword in
keyword instanceof
keyword interface
keyword let
keyword module
keyword new
keyword of
keyword package
keyword private
keyword protected
keyword public
keyword readonly
keyword require
keyword return
keyword set
keyword static
keyword super
keyword switch
keyword symbol
keyword this
keyword throw
keyword try
keyword type
keyword typeof
keyword var
keyword while
keyword with
keyword yield

type any
type Any
type boolean
type Boolean
type enum
type Enum
type false
type Function
type null
type Null
type number
type Number
type string
type String
type true
type undefined
type Undefined
type void
type Void
