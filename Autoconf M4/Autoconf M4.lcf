object SyntAnal4: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id keyword'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Id sys macros'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id const'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clPurple
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Var'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGreen
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Brackets block BG'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clWindowText
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = clMoneyGreen
      FormatType = ftBackGround
    end
    item
      DisplayName = 'Ticks block BG'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clWindowText
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 16767669
      FormatType = ftBackGround
    end
    item
      DisplayName = '@ block BG'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clWindowText
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 8835037
      FormatType = ftBackGround
    end
    item
      DisplayName = 'Symbol @'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clPurple
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Comment 2'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end>
  TokenRules = <
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '\#$ | ^\#.* | \#[\x20\-\#].*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment 2'
      StyleName = 'Comment 2'
      TokenType = 1
      Expression = '\bdnl\b .*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Var'
      StyleName = 'Var'
      TokenType = 6
      Expression = '\$\w+ | \$\{ [^\{\}]*? \} | \$\( [^\(\)]*? \)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '@begin'
      StyleName = 'Symbol @'
      TokenType = 7
      Expression = '@<:@'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '@end'
      StyleName = 'Symbol @'
      TokenType = 8
      Expression = '@:>@'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol single'
      StyleName = 'Symbol'
      TokenType = 4
      Expression = '[=,;\(\)\[\]@`] | \$\( | \$\{ | \\.'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 5
      Expression = '(?s) (?<=[\x20=\+\[]) ("|'#39')(\\\\\\\\|\\\\\1|.)*?\1'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 4
      Expression = '[\+\*\{\}<>~!&\|:%\^\#\?\$]+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Int'
      StyleName = 'Number'
      Expression = '\b\d+\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      TokenType = 2
      Expression = '[a-z_]\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'keywords'
      StyleName = 'Id keyword'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'break'
            'case'
            'do'
            'done'
            'echo'
            'else'
            'esac'
            'eval'
            'exec'
            'exit'
            'export'
            'fi'
            'for'
            'if'
            'ifelse'
            'in'
            'select'
            'set'
            'shift'
            'source'
            'test'
            'then'
            'trap'
            'unset'
            'while')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpBound
      IgnoreAsParent = False
    end
    item
      DisplayName = 'system macros'
      StyleName = 'Id sys macros'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'AC_AIX'
            'AC_ALLOCA'
            'AC_ARG_ARRAY'
            'AC_ARG_ENABLE'
            'AC_ARG_PROGRAM'
            'AC_ARG_VAR'
            'AC_ARG_WITH'
            'AC_BEFORE'
            'AC_C_BIGENDIAN'
            'AC_C_CHAR_UNSIGNED'
            'AC_C_CONST'
            'AC_C_CROSS'
            'AC_C_INLINE'
            'AC_C_LONG_DOUBLE'
            'AC_C_PROTOTYPES'
            'AC_C_STRINGIZE'
            'AC_C_VOLATILE'
            'AC_CACHE_CHECK'
            'AC_CACHE_LOAD'
            'AC_CACHE_SAVE'
            'AC_CACHE_VAL'
            'AC_CANONICAL'
            'AC_CANONICAL_BUILD'
            'AC_CANONICAL_HOST'
            'AC_CANONICAL_SYSTEM'
            'AC_CANONICAL_TARGET'
            'AC_CHAR_UNSIGNED'
            'AC_CHECK_'
            'AC_CHECK_DECL'
            'AC_CHECK_DECLS'
            'AC_CHECK_FILE'
            'AC_CHECK_FILES'
            'AC_CHECK_FUNC'
            'AC_CHECK_FUNCS'
            'AC_CHECK_HEADER'
            'AC_CHECK_HEADERS'
            'AC_CHECK_LIB'
            'AC_CHECK_MEMBER'
            'AC_CHECK_MEMBERS'
            'AC_CHECK_PROG'
            'AC_CHECK_PROGS'
            'AC_CHECK_SIZEOF'
            'AC_CHECK_TOOL'
            'AC_CHECK_TOOLS'
            'AC_CHECK_TYPE'
            'AC_CHECK_TYPES'
            'AC_CHECKING'
            'AC_COMPILE_CHECK'
            'AC_COMPILE_IFELSE'
            'AC_CONFIG_AUX_DIR'
            'AC_CONFIG_COMMANDS'
            'AC_CONFIG_COMMANDS_POST'
            'AC_CONFIG_COMMANDS_PRE'
            'AC_CONFIG_FILES'
            'AC_CONFIG_FOOS'
            'AC_CONFIG_HEADER'
            'AC_CONFIG_HEADERS'
            'AC_CONFIG_LINKS'
            'AC_CONFIG_SRCDIR'
            'AC_CONFIG_SUBDIRS'
            'AC_CONFIG_TESTDIR'
            'AC_CONST'
            'AC_COPYRIGHT'
            'AC_CROSS_CHECK'
            'AC_CYGWIN'
            'AC_DC'
            'AC_DECL_SYS_SIGLIST'
            'AC_DECL_YYTEXT'
            'AC_DEFINE'
            'AC_DEFINE_UNQUOTED'
            'AC_DEFUN'
            'AC_DIAGNOSE'
            'AC_DIR_HEADER'
            'AC_DYNIX_SEQ'
            'AC_ECHO'
            'AC_EGREP_CPP'
            'AC_EGREP_HEADER'
            'AC_EMXOS2'
            'AC_ENABLE'
            'AC_EPI'
            'AC_ERROR'
            'AC_EXEEXT'
            'AC_EXPAND_ONCE'
            'AC_F77_DUMMY_MAIN'
            'AC_F77_FUNC'
            'AC_F77_LIBRARY_LDFLAGS'
            'AC_F77_MAIN'
            'AC_F77_WRAPPERS'
            'AC_FATAL'
            'AC_FD_MSG'
            'AC_FIND_X'
            'AC_FIND_XTRA'
            'AC_FOO'
            'AC_FUNC_ALLOCA'
            'AC_FUNC_CHECK'
            'AC_FUNC_CHOWN'
            'AC_FUNC_CLOSEDIR_VOID'
            'AC_FUNC_ERROR_AT_LINE'
            'AC_FUNC_FNMATCH'
            'AC_FUNC_FORK'
            'AC_FUNC_FSEEKO'
            'AC_FUNC_GETGROUPS'
            'AC_FUNC_GETLOADAVG'
            'AC_FUNC_GETMNTENT'
            'AC_FUNC_GETPGRP'
            'AC_FUNC_LSTAT'
            'AC_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK'
            'AC_FUNC_MALLOC'
            'AC_FUNC_MEMCMP'
            'AC_FUNC_MKTIME'
            'AC_FUNC_MMAP'
            'AC_FUNC_OBSTACK'
            'AC_FUNC_SELECT_ARGTYPES'
            'AC_FUNC_SETPGRP'
            'AC_FUNC_SETVBUF_REVERSED'
            'AC_FUNC_STAT'
            'AC_FUNC_STRCOLL'
            'AC_FUNC_STRERROR_R'
            'AC_FUNC_STRFTIME'
            'AC_FUNC_STRNLEN'
            'AC_FUNC_STRTOD'
            'AC_FUNC_UTIME_NULL'
            'AC_FUNC_VFORK'
            'AC_FUNC_VPRINTF'
            'AC_FUNC_WAIT3'
            'AC_GCC_TRADITIONAL'
            'AC_GETGROUPS_T'
            'AC_GETLOADAVG'
            'AC_HAVE_FUNCS'
            'AC_HAVE_HEADERS'
            'AC_HAVE_LIBRARY'
            'AC_HAVE_POUNDBANG'
            'AC_HEADER_CHECK'
            'AC_HEADER_DIRENT'
            'AC_HEADER_EGREP'
            'AC_HEADER_MAJOR'
            'AC_HEADER_STAT'
            'AC_HEADER_STDC'
            'AC_HEADER_SYS_WAIT'
            'AC_HEADER_TIME'
            'AC_HEADER_TIOCGWINSZ'
            'AC_HEADERS_STDC'
            'AC_HELP_STRING'
            'AC_INIT'
            'AC_INLINE'
            'AC_INT_16_BITS'
            'AC_IRIX_SUN'
            'AC_ISC_POSIX'
            'AC_LANG'
            'AC_LANG_C'
            'AC_LANG_CPLUSPLUS'
            'AC_LANG_FORTRAN77'
            'AC_LANG_POP'
            'AC_LANG_PROGRAM'
            'AC_LANG_PUSH'
            'AC_LANG_RESTORE'
            'AC_LANG_SAVE'
            'AC_LIBOBJ'
            'AC_LIBOBJ_DECL'
            'AC_LIBSOURCE'
            'AC_LIBSOURCES'
            'AC_LINK_FILES'
            'AC_LINK_IFELSE'
            'AC_LN_S'
            'AC_LONG_64_BITS'
            'AC_LONG_DOUBLE'
            'AC_LONG_FILE_NAMES'
            'AC_MACRODIR'
            'AC_MAJOR_HEADER'
            'AC_MEMORY_H'
            'AC_MINGW32'
            'AC_MINIX'
            'AC_MINUS_C_MINUS_O'
            'AC_MMAP'
            'AC_MODE_T'
            'AC_MSG_CHECKING'
            'AC_MSG_ERROR'
            'AC_MSG_NOTICE'
            'AC_MSG_RESULT'
            'AC_MSG_WARN'
            'AC_OBJEXT'
            'AC_OBSOLETE'
            'AC_OFF_T'
            'AC_OUTPUT'
            'AC_OUTPUT_COMMANDS'
            'AC_OUTPUT_FILES'
            'AC_PACKAGE_BUGREPORT'
            'AC_PACKAGE_NAME'
            'AC_PACKAGE_STRING'
            'AC_PACKAGE_TARNAME'
            'AC_PACKAGE_VERSION'
            'AC_PATH_PROG'
            'AC_PATH_PROGS'
            'AC_PATH_TOOL'
            'AC_PATH_X'
            'AC_PATH_X_DIRECT'
            'AC_PATH_X_XMKMF'
            'AC_PATH_XTRA'
            'AC_PID_T'
            'AC_PREFIX'
            'AC_PREFIX_DEFAULT'
            'AC_PREFIX_PROGRAM'
            'AC_PREREQ'
            'AC_PROG_AWK'
            'AC_PROG_CC'
            'AC_PROG_CC_C_O'
            'AC_PROG_CC_STDC'
            'AC_PROG_CPP'
            'AC_PROG_CXX'
            'AC_PROG_CXXCPP'
            'AC_PROG_F77'
            'AC_PROG_F77_C_O'
            'AC_PROG_GCC_TRADITIONAL'
            'AC_PROG_INSTALL'
            'AC_PROG_LEX'
            'AC_PROG_LN_S'
            'AC_PROG_MAKE_SET'
            'AC_PROG_RANLIB'
            'AC_PROG_YACC'
            'AC_PROGRAM_CHECK'
            'AC_PROGRAM_EGREP'
            'AC_PROGRAM_PATH'
            'AC_PROGRAMS_CHECK'
            'AC_PROGRAMS_PATH'
            'AC_PROVIDE'
            'AC_REMOTE_TAPE'
            'AC_REPLACE_FUNCS'
            'AC_REQUIRE'
            'AC_REQUIRE_CPP'
            'AC_RESTARTABLE_SYSCALLS'
            'AC_RETSIGTYPE'
            'AC_REVISION'
            'AC_RSH'
            'AC_SCO_INTL'
            'AC_SEARCH_LIBS'
            'AC_SET_MAKE'
            'AC_SETVBUF_REVERSED'
            'AC_SHELL_TRUE'
            'AC_SIZE_T'
            'AC_SIZEOF_TYPE'
            'AC_ST_BLKSIZE'
            'AC_ST_BLOCKS'
            'AC_ST_RDEV'
            'AC_STAT_MACROS_BROKEN'
            'AC_STDC_HEADERS'
            'AC_STRCOLL'
            'AC_STRUCT_ST_BLKSIZE'
            'AC_STRUCT_ST_BLOCKS'
            'AC_STRUCT_ST_RDEV'
            'AC_STRUCT_TIMEZONE'
            'AC_STRUCT_TM'
            'AC_SUBST'
            'AC_SUBST_FILE'
            'AC_SUBST_SYMBOL'
            'AC_SYS_INTERPRETER'
            'AC_SYS_LARGEFILE'
            'AC_SYS_LONG_FILE_NAMES'
            'AC_SYS_POSIX_TERMIOS'
            'AC_SYS_RESTARTABLE_SYSCALLS'
            'AC_SYS_SIGLIST_DECLARED'
            'AC_TEST_CPP'
            'AC_TEST_PROGRAM'
            'AC_TIME_WITH_SYS_TIME'
            'AC_TIMEZONE'
            'AC_TRY_COMPILE'
            'AC_TRY_CPP'
            'AC_TRY_LINK'
            'AC_TRY_LINK_FUNC'
            'AC_TRY_RUN'
            'AC_TYPE_GETGROUPS'
            'AC_TYPE_MODE_T'
            'AC_TYPE_OFF_T'
            'AC_TYPE_PID_T'
            'AC_TYPE_SIGNAL'
            'AC_TYPE_SIZE_T'
            'AC_TYPE_UID_T'
            'AC_UID_T'
            'AC_UNISTD_H'
            'AC_USG'
            'AC_UTIME_NULL'
            'AC_VALIDATE_CACHED_SYSTEM_TUPLE'
            'AC_VERBOSE'
            'AC_VFORK'
            'AC_VPRINTF'
            'AC_WAIT3'
            'AC_WARN'
            'AC_WARNING'
            'AC_WITH'
            'AC_WORDS_BIGENDIAN'
            'AC_XENIX_DIR'
            'AC_YYTEXT_POINTER'
            'AM_CHECK'
            'AM_CONDITIONAL'
            'AM_EGREP'
            'AM_GLIB_GNU_GETTEXT'
            'AM_GNU_GETTEXT'
            'AM_INIT_AUTOMAKE'
            'AM_MAINTAINER_MODE'
            'AM_MISSING_PROG'
            'AM_PATH'
            'AM_PATH_GTK'
            'AM_PATH_GTKMM'
            'AM_PO_SUBDIRS'
            'AM_PROG_AR'
            'AM_PROG_LEX'
            'AM_RUN_LOG'
            'AM_SUBST_NOTMAKE'
            'AM_TYPE_PTRDIFF_T'
            'AM_WITH_NLS'
            'm4_append'
            'm4_assert'
            'm4_bmatch'
            'm4_bpatsubst'
            'm4_bregexp'
            'm4_builtin'
            'm4_case'
            'm4_combine'
            'm4_copy'
            'm4_default'
            'm4_define'
            'm4_defn'
            'm4_defun'
            'm4_defun_once'
            'm4_divert'
            'm4_divert_diversion'
            'm4_divert_text'
            'm4_dnl'
            'm4_dquote'
            'm4_eval'
            'm4_exit'
            'm4_fatal'
            'm4_flags'
            'm4_foreach'
            'm4_foreach_w'
            'm4_if'
            'm4_ifdef'
            'm4_ifndef'
            'm4_ifset'
            'm4_ifval'
            'm4_ifvaln'
            'm4_include'
            'm4_index'
            'm4_indir'
            'm4_join'
            'm4_n'
            'm4_normalize'
            'm4_PACKAGE_STRING'
            'm4_PACKAGE_VERSION'
            'm4_patsubst'
            'm4_pattern_allow'
            'm4_pattern_forbid'
            'm4_popdef'
            'm4_provide'
            'm4_provide_if'
            'm4_pushdef'
            'm4_quote'
            'm4_regexp'
            'm4_require'
            'm4_shift'
            'm4_shiftn'
            'm4_split'
            'm4_toupper'
            'm4_undefine'
            'm4_version_compare'
            'm4_warn'
            'm4_warning'
            'm4_wrap')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'consts'
      StyleName = 'Id const'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'false'
            'no'
            'true'
            'yes')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'case begin'
      ConditionList = <
        item
          TagList.Strings = (
            'case')
          TokenTypes = 4
        end>
      BlockEnd = 'case end'
      DisplayInTree = False
      HighlightPos = cpAny
      DrawStaple = True
      CollapseFmt = '%sz0'
      IgnoreAsParent = False
    end
    item
      DisplayName = 'case end'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            'esac')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'if begin'
      ConditionList = <
        item
          TagList.Strings = (
            'if')
          TokenTypes = 4
        end>
      BlockEnd = 'if end'
      DisplayInTree = False
      HighlightPos = cpAny
      DrawStaple = True
      CollapseFmt = '%sz0'
      IgnoreAsParent = False
    end
    item
      DisplayName = 'if end'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            'fi')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'for begin'
      ConditionList = <
        item
          TagList.Strings = (
            'for'
            'select'
            'while')
          TokenTypes = 4
        end>
      BlockEnd = 'for end'
      DisplayInTree = False
      HighlightPos = cpAny
      DrawStaple = True
      CollapseFmt = '%sz0'
      IgnoreAsParent = False
    end
    item
      DisplayName = 'for end'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            'done')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'tick begin'
      Enabled = False
      StyleName = 'Ticks block BG'
      StatesAdd = 2
      StatesAbsent = 2
      ConditionList = <
        item
          TagList.Strings = (
            '(?=\x20)`')
          CondType = tcStrictMask
        end>
      BlockEnd = 'tick end'
      NotCollapsed = True
      DisplayInTree = False
      DynHighlight = dhRange
      HighlightPos = cpAny
      CancelNextRules = True
      IgnoreAsParent = False
    end
    item
      DisplayName = 'tick end'
      Enabled = False
      StatesRemove = 2
      StatesPresent = 2
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            '`')
          TokenTypes = 16
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '['
      StyleName = 'Brackets block BG'
      ConditionList = <
        item
          TagList.Strings = (
            '[')
          TokenTypes = 16
        end>
      BlockEnd = ']'
      NotCollapsed = True
      DisplayInTree = False
      DynHighlight = dhRange
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = ']'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            ']')
          TokenTypes = 16
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '@ block begin'
      StyleName = '@ block BG'
      ConditionList = <
        item
          TokenTypes = 128
        end>
      BlockEnd = '@ block end'
      NotCollapsed = True
      DisplayInTree = False
      DynHighlight = dhRange
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '@ block end'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TokenTypes = 256
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    '# Commet here'
    'dnl Comment here'
    '10 + yes + no +"test"='#39'test'#39' + `pwd`'
    ''
    'AC_ARG_WITH('
    #9'AC_HELP_STRING('
    #9#9'[--path=@<:@DIR@:>@],'
    #9#9'[Folder is @<:@default=${datadir}/pixmaps@:>@]'
    #9')'
    ')'
    ''
    'case `pwd` in'
    '  *[[\\\"\#\$\&\'#39'\`$am_lf]]*)'
    '    AC_MSG_ERROR([directory name]);;'
    'esac'
    ''
    'case "$host_os" in'
    #9'windows* | cygwin* | mingw*)'
    
      #9#9'AC_DEFINE([WIN32], [1], [Define to 1 if you have a Cygwin/Wind' +
      'ows OS.])'
    #9#9'LIBS="$LIBS -lintl.dll"'
    #9';;'
    'esac'
    ''
    'if test "$CC" = "gcc" ; then'
    #9'CFLAGS="$CFLAGS -Wall -pipe"'
    'fi'
    ''
    '# Double-quote double-evaled strings.'
    'for var in lt_decl_all_varnames([[ \'
    ']], lt_decl_dquote_varnames); do'
    '    case \`eval \\\\\$ECHO \\\\""\\\\\$\$var"\\\\"\` in'
    '    *[[\\\\\\\`\\"\\\$]]*)'
    
      '      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"\\\$\$var\\" | \\\$S' +
      'ED -e \\"\\\$double_quote_subst\\" -e \\"\\\$sed_quote_subst\\" ' +
      '-e \\"\\\$delay_variable_subst\\"\\\`\\\\\\"" ## exclude from sc' +
      '_prohibit_nested_quotes'
    '      ;;'
    '    *)'
    '      eval "lt_\$var=\\\\\\"\\\$\$var\\\\\\""'
    '      ;;'
    '    esac'
    'done')
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Id'
    'Label'
    'Symbol'
    'String'
    'Var'
    '@begin'
    '@end')
  Extentions = '/configure.ac /configure.in m4'
  LexerName = 'Autoconf M4'
  SkipSpaces = False
  Notes.Strings = (
    'Alexey (CudaText)'
    
      '- rules "tick begin/end" are disabled, coz they break hiliting i' +
      'f single tick-char occurs in [...]'
    
      '- rule for "string" is weird: before str must be spec char (to n' +
      'ot break hiliting if " in [...]),'
    
      'and escape-char is \\\\ (is it ok?). example text shows it at en' +
      'd.'
    '- rule for "comment" is weird: coz char # occurs inside code')
  RestartFromLineStart = True
  LineComment = '#'
  Charset = DEFAULT_CHARSET
end
