object SyntAnal41: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id keyword'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Id command'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clPurple
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id register'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlue
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Label'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Label equal sign'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Directive'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = 215
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Preproc'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clFuchsia
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end>
  TokenRules = <
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '(@|;|//) .*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment 2'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '(?s)/\*.*?(\*/|\Z)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Float'
      StyleName = 'Number'
      TokenType = 5
      Expression = '-? (\d+ \.)? \d+ e [\+\-]? \d+ |'#13#10'-? \d+ \. \d+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Hex'
      StyleName = 'Number'
      TokenType = 5
      Expression = '\#? \-? 0x[0-9a-f_]+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Integer'
      StyleName = 'Number'
      TokenType = 5
      Expression = '\#? \-? \d+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Label'
      StyleName = 'Label'
      Expression = '\w[\w\\]+:      '
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Label='
      StyleName = 'Label equal sign'
      TokenType = 7
      Expression = '=\w+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id register'
      StyleName = 'Id register'
      TokenType = 2
      Expression = 
        '([xw][0-9]|[xw]1[0-9]||[xw]2[0-9]|[wx]30|wzr|xzr|wsp|fpsr|fpcr|[' +
        'rcp]1[0-5]|[rcp][0-9]|a[1-4]|v[1-8]|sl|sb|fp|ip|sp|lr|(c|s)psr(_' +
        'c)?|pc|[sd]3[0-1]|[sd][12][0-9]|[sd][0-9]|fpsid|fpscr|fpexc|q3[0' +
        '-1]|q2[0-9]|q1[0-9]|q[0-9]|APSR_nzcv|sy)\b'#13#10
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      TokenType = 2
      Expression = '[a-z_]\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Directive'
      StyleName = 'Directive'
      TokenType = 6
      Expression = '\.\w+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 4
      Expression = '\# '#39'.*?('#39'|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String2'
      StyleName = 'String'
      TokenType = 4
      Expression = '(['#39'"]) .*? (\1|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 3
      Expression = '[\.,:\-\+\*\\/%@<>\(\)\[\]\{\}\?=!]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Preproc'
      StyleName = 'Preproc'
      TokenType = 8
      Expression = '^\s*\#\s*\w+'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'Keywords'
      StyleName = 'Id keyword'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'align'
            'altmacro'
            'arch'
            'arm'
            'balign'
            'code'
            'else'
            'elseif'
            'endfunc'
            'endif'
            'endm'
            'endr'
            'error'
            'fpu'
            'func'
            'global'
            'globl'
            'hidden'
            'if'
            'import'
            'include'
            'int'
            'irp'
            'macro'
            'object_arch'
            'purgem'
            'rept'
            'req'
            'section'
            'short'
            'string'
            'text'
            'type'
            'unreq'
            'word')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Label'
      ConditionList = <
        item
          TokenTypes = 1
        end>
      HighlightPos = cpAny
      NoEndRule = True
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Commands'
      StyleName = 'Id command'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'ADC'
            'ADD'
            'AND'
            'B'
            'BIC'
            'BKPT'
            'BL'
            'BLX'
            'BX'
            'BXJ'
            'CDP'
            'CDP2'
            'CLREX'
            'CLZ'
            'CMN'
            'CMP'
            'CPS'
            'CPY'
            'EOR'
            'LDC'
            'LDC2'
            'LDM'
            'LDR'
            'LDREX'
            'LDREXB'
            'LDREXD'
            'LDREXH'
            'MCR'
            'MCR2'
            'MCRR'
            'MCRR2'
            'MLA'
            'MOV'
            'MRC'
            'MRC2'
            'MRRC'
            'MRRC2'
            'MRS'
            'MSR'
            'MUL'
            'MVN'
            'NOP'
            'ORR'
            'PKHBT'
            'PKHTB'
            'PLD'
            'QADD'
            'QADD16'
            'QADD8'
            'QADDSUBX'
            'QDADD'
            'QDSUB'
            'QSUB'
            'QSUB16'
            'QSUB8'
            'QSUBADDX'
            'REV'
            'REV16'
            'REVSH'
            'RFE'
            'RSB'
            'RSC'
            'SADD16'
            'SADD8'
            'SADDSUBX'
            'SBC'
            'SEL'
            'SETEND'
            'SHADD16'
            'SHADD8'
            'SHADDSUBX'
            'SHSUB16'
            'SHSUB8'
            'SHSUBADDX'
            'SMC'
            'SMLAD'
            'SMLADX'
            'SMLAL'
            'SMLALD'
            'SMLALDX'
            'SMLALxy'
            'SMLAWy'
            'SMLAxy'
            'SMLSD'
            'SMLSDX'
            'SMLSLD'
            'SMLSLDX'
            'SMMLA'
            'SMMLAR'
            'SMMLS'
            'SMMLSR'
            'SMMUL'
            'SMMULR'
            'SMUAD'
            'SMUADX'
            'SMULL'
            'SMULWy'
            'SMULxy'
            'SMUSD'
            'SMUSDX'
            'SRS'
            'SSAT'
            'SSAT16'
            'SSUB16'
            'SSUB8'
            'SSUBADDX'
            'STC'
            'STC2'
            'STM'
            'STR'
            'STREX'
            'STREXB'
            'STREXD'
            'STREXH'
            'SUB'
            'SVC'
            'SWP'
            'SXTAB'
            'SXTAB16'
            'SXTAH'
            'SXTB'
            'SXTB16'
            'SXTH'
            'TEQ'
            'TST'
            'UADD16'
            'UADD8'
            'UADDSUBX'
            'UHADD16'
            'UHADD8'
            'UHADDSUBX'
            'UHSUB16'
            'UHSUB8'
            'UHSUBADDX'
            'UMAAL'
            'UMLAL'
            'UMULL'
            'UQADD16'
            'UQADD8'
            'UQADDSUBX'
            'UQSUB16'
            'UQSUB8'
            'UQSUBADDX'
            'USAD8'
            'USADA8'
            'USAT'
            'USAT16'
            'USUB16'
            'USUB8'
            'USUBADDX'
            'UXTAB'
            'UXTAB16'
            'UXTAH'
            'UXTB'
            'UXTB16'
            'UXTH'
            'YIELD')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    '  =label'
    '//Test'
    '  # endif name'
    '/* Test'
    'test */   0xA0b0 -0.1020 #'#39'test'#39
    #39'test'#39' + "test"'
    ''
    '.global connect'
    'connect:'
    '    mov     ip, sp'
    '    push    {fp, ip, lr}'
    '    sub     fp, ip, #4'
    '    mov     r0, #-2'
    '    mov     r1, #0xAB_FF  '
    ''
    '    @ sockfd is now in r0'
    '    push    {r0}        @ push sockfd'
    ''
    '.data'
    'socket_call:   .long 281'
    'connect_call:  .long 283'
    ''
    'server_port:            .hword 0x0b00'
    'msg_head:       .string "armbot: source"'
    '')
  TokenTypeNames.Strings = (
    'Label'
    'Comment'
    'Id'
    'Symbol'
    'String'
    'Number'
    'Directive'
    'Label='
    'Preproc')
  Extentions = 's S'
  LexerName = 'Assembly ARM'
  SkipSpaces = False
  Notes.Strings = (
    'Alex (Synwrite)'
    'Samples:'
    '  https://github.com/wyc/armbot'
    '  https://github.com/ICTeam28/PiFox')
  LineComment = '@'
  Charset = DEFAULT_CHARSET
end
