object SyntAnal33: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = '#Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlue
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Tag'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Var'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGreen
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Keyword'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clPurple
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Sublexer BG'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clWindowText
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = clMoneyGreen
      FormatType = ftBackGround
    end
    item
      DisplayName = 'HTML tag'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'HTML entity'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clRed
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end>
  TokenRules = <
    item
      DisplayName = '^Id'
      StyleName = 'Id'
      Expression = '(?<=^[\x20\x09]*) \w+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '^#Id'
      StyleName = '#Id'
      TokenType = 1
      Expression = '(?<=^[\x20\x09]*) \#\w+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Html tag'
      StyleName = 'HTML tag'
      TokenType = 10
      Expression = '(?<=</?)\w+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      TokenType = 2
      Expression = '\w[\w\-]+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '#Id'
      StyleName = '#Id'
      TokenType = 7
      Expression = '\#\w+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      TokenType = 5
      Expression = '\s* //.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 3
      Expression = '("|'#39') .*? (\1|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '#{Var}'
      StyleName = 'Var'
      TokenType = 8
      Expression = '\#\{\S+\}'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '$Var'
      StyleName = 'Var'
      TokenType = 8
      Expression = '\$\w+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Html entity'
      StyleName = 'HTML entity'
      TokenType = 11
      Expression = '&\#?\w+;'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 6
      Expression = '[/\+\-\*:=<>&/\|\^\.!\?%\(\)\[\],;\#\{\}]'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'Tags'
      StyleName = 'Tag'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'a'
            'abbr'
            'acronym'
            'address'
            'applet'
            'area'
            'article'
            'aside'
            'audio'
            'b'
            'base'
            'basefont'
            'bdi'
            'bdo'
            'big'
            'blockquote'
            'body'
            'br'
            'button'
            'canvas'
            'caption'
            'center'
            'cite'
            'code'
            'col'
            'colgroup'
            'command'
            'datalist'
            'dd'
            'del'
            'details'
            'dfn'
            'dir'
            'div'
            'dl'
            'doctype'
            'dt'
            'em'
            'embed'
            'fieldset'
            'figcaption'
            'figure'
            'font'
            'footer'
            'form'
            'frame'
            'frameset'
            'h1'
            'h2'
            'h3'
            'h4'
            'h5'
            'h6'
            'head'
            'header'
            'hgroup'
            'hr'
            'html'
            'i'
            'iframe'
            'img'
            'input'
            'ins'
            'kbd'
            'keygen'
            'label'
            'legend'
            'li'
            'link'
            'map'
            'mark'
            'menu'
            'meta'
            'meter'
            'nav'
            'noframes'
            'noindex'
            'noscript'
            'object'
            'ol'
            'optgroup'
            'option'
            'output'
            'p'
            'param'
            'php'
            'pre'
            'progress'
            'q'
            'rp'
            'rt'
            'ruby'
            's'
            'samp'
            'script'
            'section'
            'select'
            'small'
            'source'
            'span'
            'strike'
            'strong'
            'style'
            'sub'
            'summary'
            'sup'
            'table'
            'tbody'
            'td'
            'textarea'
            'tfoot'
            'th'
            'thead'
            'time'
            'title'
            'tr'
            'track'
            'tt'
            'u'
            'ul'
            'var'
            'video'
            'wbr')
          TokenTypes = 1
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Keywords'
      StyleName = 'Keyword'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'block'
            'case'
            'channel'
            'default'
            'each'
            'else'
            'extends'
            'if'
            'in'
            'include'
            'mixin'
            'rss'
            'when')
          TokenTypes = 5
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'block begin'
      ConditionList = <
        item
          TokenTypes = 3
        end>
      EndOfTextClose = True
      DisplayInTree = False
      NameFmt = '"%s0"'
      RefToCondEnd = True
      HighlightPos = cpAny
      GroupIndex = 20
      CollapseFmt = '%sz0 ...'
      IgnoreAsParent = False
    end
    item
      DisplayName = '<?'
      StyleName = 'Sublexer BG'
      ConditionList = <
        item
          TagList.Strings = (
            '?')
          TokenTypes = 64
        end
        item
          TagList.Strings = (
            '<')
          TokenTypes = 64
        end>
      BlockEnd = '?>'
      RefToCondEnd = True
      DynHighlight = dhRange
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '?>'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            '>')
          TokenTypes = 64
        end
        item
          TagList.Strings = (
            '?')
          TokenTypes = 64
        end>
      BlockOffset = -1
      RefToCondEnd = True
      HighlightPos = cpAny
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    'html(lang="en")'
    '  //Comment'
    '  head'
    '    title= #{title} #{test} <?= $var ?>'
    '    script(type='#39'text/javascript'#39')'
    '      if (foo) {'
    '         bar()'
    '      }'
    '  body'
    '    h1#id Jade - node template engine'
    '    #container.col'
    '      if youAreUsingJade in test'
    '        p You are amazing'
    '      else'
    '        p Get on it!'
    '      p.'
    '        Jade is a terse and simple'
    '        templating language')
  TokenTypeNames.Strings = (
    '^id'
    '^#id'
    'Id'
    'String'
    'Number'
    'Comment'
    'Symbol'
    '#Id'
    'Var'
    'Php bracket'
    'Html tag'
    'Html entity')
  Extentions = 'pug'
  LexerName = 'Pug'
  SkipSpaces = False
  Notes.Strings = (
    'Alexey (CudaText)'
    'Based on lexer Jade, added minor tweaks')
  LineComment = '//'
  Charset = DEFAULT_CHARSET
end
