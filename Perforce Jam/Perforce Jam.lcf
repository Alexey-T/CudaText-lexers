<<<<<<< HEAD
object SyntAnal14: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'Keywords'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Symbol2'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clRed
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = '<Id>'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGreen
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Func'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = '$(Var)'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlue
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end>
  TokenRules = <
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '\#.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '<Id>'
      StyleName = '<Id>'
      TokenType = 7
      Expression = '<[a-z_][\w\-]*>'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Rule'
      StyleName = 'Func'
      TokenType = 11
      Expression = '\brule\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      TokenType = 2
      Expression = '[a-z_/][\w\-/\.:\\]*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '$(Id)'
      StyleName = '$(Var)'
      TokenType = 8
      Expression = '\$\(.+?\)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol {}'
      StyleName = 'Symbol'
      TokenType = 10
      Expression = '[\{\}]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol single'
      StyleName = 'Symbol'
      TokenType = 4
      Expression = '\\. | \$[\[\(\{] | [,;`\[\]@\(\)\[\]] '
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol 2'
      StyleName = 'Symbol2'
      TokenType = 4
      Expression = '=~ | [&\|=<>\^]=? | [/\-\+!\*\^:~%]='
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 4
      Expression = '[\*&:%\?!~]+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 5
      Expression = '" (\\.|.)*? ("|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Number hex'
      StyleName = 'Number'
      TokenType = 6
      Expression = '\b0[0-7]+\b | \b0x[0-9a-f]+\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Number dec'
      StyleName = 'Number'
      TokenType = 6
      Expression = '\b[1-9]\d*\b | \b0\b'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'keywords'
      StyleName = 'Keywords'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'actions'
            'alias'
            'break'
            'case'
            'continue'
            'else'
            'exe'
            'explicit'
            'feature'
            'for'
            'if'
            'import'
            'in'
            'include'
            'install'
            'lib'
            'local'
            'on'
            'project'
            'return'
            'run'
            'switch'
            'while')
          TokenTypes = 4100
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'rule'
      ConditionList = <
        item
          TokenTypes = 2048
        end>
      NameFmt = '%s-1'
      HighlightPos = cpAny
      NoEndRule = True
      IgnoreAsParent = False
    end
    item
      DisplayName = '{'
      ConditionList = <
        item
          TagList.Strings = (
            '{')
          TokenTypes = 132096
        end>
      BlockEnd = '}'
      DisplayInTree = False
      HighlightPos = cpAny
      DrawStaple = True
      CollapseFmt = '{ ... }'
      IgnoreAsParent = False
    end
    item
      DisplayName = '}'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            '}')
          TokenTypes = 1024
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    '#Comment'
    'VERSION = 2.0.3 ;'
    'BOOST_ROOT = [ modules.peek : BOOST_ROOT ] ;'
    'ECHO "CXXFLAGS =" $(CXXFLAGS) ;'
    'if $(BOOST_ROOT)'
    '{'
    #9'<use-project>;'
    
      #9'alias boost_system : /boost/system : : : <include>$(BOOST_ROOT)' +
      ' ;'
    '}')
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Id'
    'Label'
    'Symbol'
    'String'
    'Number'
    '<Id>'
    '$(Id)'
    'Id='
    'Symbol {}'
    'Rule')
  Extentions = '/Jamfile jam'
  LexerName = 'Perforce Jam'
  Notes.Strings = (
    'Alexey (CudaText)'
    
      'Docs: https://swarm.workshop.perforce.com/view/guest/perforce_so' +
      'ftware/jam/src/Jam.html')
  RestartFromLineStart = True
  LineComment = '#'
  Charset = DEFAULT_CHARSET
end
=======
object SyntAnal14: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'Keywords'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Symbol2'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clRed
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = '<Id>'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGreen
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Func'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = '$(Var)'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlue
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end>
  TokenRules = <
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '\#.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '<Id>'
      StyleName = '<Id>'
      TokenType = 7
      Expression = '<[a-z_][\w\-]*>'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Rule'
      StyleName = 'Func'
      TokenType = 11
      Expression = '\brule\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      TokenType = 2
      Expression = '[a-z_/][\w\-/\.:\\]*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = '$(Id)'
      StyleName = '$(Var)'
      TokenType = 8
      Expression = '\$\(.+?\)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol {}'
      StyleName = 'Symbol'
      TokenType = 10
      Expression = '[\{\}]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol single'
      StyleName = 'Symbol'
      TokenType = 4
      Expression = '\\. | \$[\[\(\{] | [,;`\[\]@\(\)\[\]] '
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol 2'
      StyleName = 'Symbol2'
      TokenType = 4
      Expression = '=~ | [&\|=<>\^]=? | [/\-\+!\*\^:~%]='
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 4
      Expression = '[\*&:%\?!~]+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 5
      Expression = '" (\\.|.)*? ("|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Number hex'
      StyleName = 'Number'
      TokenType = 6
      Expression = '\b0[0-7]+\b | \b0x[0-9a-f]+\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Number dec'
      StyleName = 'Number'
      TokenType = 6
      Expression = '\b[1-9]\d*\b | \b0\b'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'keywords'
      StyleName = 'Keywords'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'actions'
            'alias'
            'break'
            'case'
            'continue'
            'else'
            'exe'
            'explicit'
            'feature'
            'for'
            'if'
            'import'
            'in'
            'include'
            'install'
            'lib'
            'local'
            'on'
            'project'
            'return'
            'run'
            'switch'
            'while')
          TokenTypes = 4100
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'rule'
      ConditionList = <
        item
          TokenTypes = 2048
        end>
      NameFmt = '%s-1'
      HighlightPos = cpAny
      NoEndRule = True
      IgnoreAsParent = False
    end
    item
      DisplayName = '{'
      ConditionList = <
        item
          TagList.Strings = (
            '{')
          TokenTypes = 132096
        end>
      BlockEnd = '}'
      DisplayInTree = False
      HighlightPos = cpAny
      DrawStaple = True
      CollapseFmt = '{ ... }'
      IgnoreAsParent = False
    end
    item
      DisplayName = '}'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            '}')
          TokenTypes = 1024
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    '#Comment'
    'VERSION = 2.0.3 ;'
    'BOOST_ROOT = [ modules.peek : BOOST_ROOT ] ;'
    'ECHO "CXXFLAGS =" $(CXXFLAGS) ;'
    'if $(BOOST_ROOT)'
    '{'
    #9'<use-project>;'
    
      #9'alias boost_system : /boost/system : : : <include>$(BOOST_ROOT)' +
      ' ;'
    '}')
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Id'
    'Label'
    'Symbol'
    'String'
    'Number'
    '<Id>'
    '$(Id)'
    'Id='
    'Symbol {}'
    'Rule')
  Extentions = '/Jamfile jam'
  LexerName = 'Perforce Jam'
  Notes.Strings = (
    'Alexey (CudaText)'
    
      'Docs: https://swarm.workshop.perforce.com/view/guest/perforce_so' +
      'ftware/jam/src/Jam.html')
  RestartFromLineStart = True
  LineComment = '#'
  Charset = DEFAULT_CHARSET
end
>>>>>>> 365bc49aeb82c74197c95e30788a802e83f01c15
