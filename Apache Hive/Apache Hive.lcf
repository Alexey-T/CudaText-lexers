object SyntAnal2: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id keyword'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Id type'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clPurple
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id func'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlue
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'String tick'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Var BG'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clWindowText
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = clMoneyGreen
      FormatType = ftBackGround
    end>
  TokenRules = <
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      TokenType = 2
      Expression = '(?<!\.) [a-z_]\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 4
      Expression = '("|'#39') (\\\1|\\\\|.)*? (\1|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String tick'
      StyleName = 'String tick'
      TokenType = 4
      Expression = '`.+?`'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Hex'
      StyleName = 'Number'
      TokenType = 5
      Expression = '0x[\da-f]+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Float'
      StyleName = 'Number'
      TokenType = 5
      Expression = '(\d+ \.)? \d+ e [\+\-]? \d+ [D]? |'#13#10'\d+ \. \d+ [D]?'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Integer'
      StyleName = 'Number'
      TokenType = 5
      Expression = '\d+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment 1'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '(?s)/\*.*?(\*/|\Z)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment 2'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '--.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Single symbol'
      StyleName = 'Symbol'
      TokenType = 3
      Expression = '[\{\}\(\)\[\],;:]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 3
      Expression = '[\+\*=<>&\|\^\.!%\#\$\^~\\]+'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'Id keyword'
      StyleName = 'Id keyword'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'add'
            'after'
            'all'
            'alter'
            'analyze'
            'and'
            'archive'
            'as'
            'asc'
            'avro'
            'between'
            'bucket'
            'buckets'
            'by'
            'cascade'
            'case'
            'change'
            'cluster'
            'clustered'
            'collection'
            'column'
            'columns'
            'comment'
            'compact'
            'compile'
            'compute'
            'concatenate'
            'create'
            'CREATE_KEY'
            'CREATE_ZONE'
            'cross'
            'CRYPTO'
            'cube'
            'current'
            'data'
            'database'
            'databases'
            'dbproperties'
            'DEFERRED'
            'defined'
            'delete'
            'DELETE_KEY'
            'delimited'
            'dependency'
            'desc'
            'describe'
            'directories'
            'directory'
            'disable'
            'distinct'
            'distribute'
            'dot'
            'drop'
            'else'
            'enable'
            'end'
            'escaped'
            'exclusive'
            'exists'
            'explain'
            'export'
            'extended'
            'external'
            'fields'
            'file'
            'fileformat'
            'first'
            'following'
            'for'
            'format'
            'formatted'
            'from'
            'full'
            'function'
            'functions'
            'grant'
            'group'
            'grouping'
            'having'
            'idxproperties'
            'if'
            'import'
            'in'
            'index'
            'indexes'
            'inner'
            'inpath'
            'inputformat'
            'insert'
            'into'
            'is'
            'items'
            'jar'
            'join'
            'keys'
            'lateral'
            'left'
            'like'
            'limit'
            'lines'
            'load'
            'local'
            'location'
            'lock'
            'locks'
            'macro'
            'map'
            'msck'
            'named'
            'no_drop'
            'not'
            'null'
            'of'
            'offline'
            'on'
            'option'
            'or'
            'orc'
            'order'
            'out'
            'outer'
            'outputformat'
            'over'
            'overwrite'
            'owner'
            'parquet'
            'partition'
            'partitioned'
            'partitions'
            'percent'
            'preceding'
            'preserve'
            'principals'
            'privileges'
            'rcfile'
            'rebuild'
            'recordreader'
            'RECORDWRITER'
            'recover'
            'reduce'
            'regexp'
            'rename'
            'repair'
            'replace'
            'restrict'
            'revoke'
            'right'
            'rlike'
            'role'
            'roles'
            'rollup'
            'row'
            'rows'
            'schema'
            'schemas'
            'select'
            'semi'
            'sequencefile'
            'serde'
            'serdeproperties'
            'set'
            'sets'
            'shared'
            'show'
            'show_database'
            'skewed'
            'sort'
            'sorted'
            'statistics'
            'stored'
            'table'
            'tables'
            'tablesample'
            'tblproperties'
            'temporary'
            'terminated'
            'textfile'
            'then'
            'to'
            'touch'
            'transactions'
            'transform'
            'truncate'
            'unarchive'
            'unbounded'
            'union'
            'uniquejoin'
            'unlock'
            'unset'
            'update'
            'use'
            'user'
            'using'
            'view'
            'when'
            'where'
            'window'
            'with')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Id type'
      StyleName = 'Id type'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'array'
            'bigint'
            'binary'
            'BLOCK__OFFSET__INSIDE__FILE'
            'boolean'
            'char'
            'date'
            'decimal'
            'double'
            'false'
            'float'
            'INPUT__FILE__NAME'
            'int'
            'null'
            'smallint'
            'string'
            'struct'
            'timestamp'
            'tinyint'
            'true'
            'uniontype'
            'varchar')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Id func'
      StyleName = 'Id func'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'abs'
            'acos'
            'add_months'
            'aes_decrypt'
            'aes_encrypt'
            'array'
            'array_contains'
            'ascii'
            'asin'
            'atan'
            'avg'
            'base64'
            'bin'
            'binary'
            'bround'
            'cast'
            'cbrt'
            'ceil'
            'ceiling'
            'chr'
            'coalesce'
            'collect_list'
            'collect_set'
            'concat'
            'concat_ws'
            'context_ngrams'
            'conv'
            'corr'
            'cos'
            'count'
            'covar_pop'
            'covar_samp'
            'crc32'
            'create_union'
            'cume_dist'
            'current_database'
            'current_date'
            'current_timestamp'
            'current_user'
            'date_add'
            'date_format'
            'date_sub'
            'datediff'
            'day'
            'dayofmonth'
            'decode'
            'degrees'
            'dense_rank'
            'e'
            'encode'
            'exp'
            'explode'
            'factorial'
            'find_in_set'
            'first_value'
            'floor'
            'format_number'
            'from_unixtime'
            'from_utc_timestamp'
            'get_json_object'
            'greatest'
            'hash'
            'hex'
            'histogram_numeric'
            'hour'
            'if'
            'in_file'
            'initcap'
            'inline'
            'instr'
            'isnotnull'
            'isnull'
            'java_method'
            'json_tuple'
            'lag'
            'last_day'
            'last_value'
            'lcase'
            'lead'
            'least'
            'length'
            'levenshtein'
            'ln'
            'locate'
            'log'
            'log10'
            'log2'
            'lower'
            'lpad'
            'ltrim'
            'map'
            'map_keys'
            'map_values'
            'mask'
            'mask_first_n'
            'mask_hash'
            'mask_last_n'
            'mask_show_first_n'
            'mask_show_last_n'
            'max'
            'md5'
            'min'
            'minute'
            'month'
            'months_between'
            'named_struct'
            'negative'
            'next_day'
            'ngrams'
            'ntile'
            'nullif'
            'nvl'
            'parse_url'
            'parse_url_tuple'
            'percent_rank'
            'percentile'
            'percentile_approx'
            'pi'
            'pmod'
            'posexplode'
            'positive'
            'pow'
            'power'
            'printf'
            'quarter'
            'radians'
            'rand'
            'rank'
            'reflect'
            'regexp_extract'
            'regexp_replace'
            'repeat'
            'reverse'
            'round'
            'row_number'
            'rpad'
            'rtrim'
            'second'
            'sentences'
            'sha'
            'sha1'
            'sha2'
            'shiftleft'
            'shiftright'
            'shiftrightunsigned'
            'sign'
            'sin'
            'size'
            'sort_array'
            'soundex'
            'space'
            'split'
            'sqrt'
            'stack'
            'stddev_pop'
            'stddev_samp'
            'str_to_map'
            'struct'
            'substr'
            'substring'
            'substring_index'
            'sum'
            'tan'
            'to_date'
            'to_utc_timestamp'
            'translate'
            'trim'
            'trunc'
            'ucase'
            'unbase64'
            'unhex'
            'unix_timestamp'
            'upper'
            'var_pop'
            'var_samp'
            'variance'
            'version'
            'weekofyear'
            'xpath'
            'xpath_double'
            'xpath_float'
            'xpath_int'
            'xpath_long'
            'xpath_number'
            'xpath_short'
            'xpath_string'
            'year')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'var begin'
      StyleName = 'Var BG'
      ConditionList = <
        item
          TagList.Strings = (
            '{')
          TokenTypes = 8
        end
        item
          TagList.Strings = (
            '$')
          TokenTypes = 8
        end>
      BlockOffset = 1
      BlockEnd = 'var end'
      NotCollapsed = True
      DisplayInTree = False
      DynHighlight = dhRange
      HighlightPos = cpAny
      DynSelectMin = True
      IgnoreAsParent = True
    end
    item
      DisplayName = 'var end'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            '}')
          TokenTypes = 8
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    '--Cmt'
    
      'add jar ${system:maven.local.repository}/org/apache/${system:hiv' +
      'e.version}.jar;'
    #39'Test'#39', `Tick`, /*Cmt'
    '*/, int, boolean, 0x20, TABLE, VIEW')
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Identifier'
    'Symbol'
    'String'
    'Number')
  Extentions = 'q ql hql'
  LexerName = 'Apache Hive'
  Notes.Strings = (
    'Alexey (SynWrite)')
  LineComment = '--'
  Charset = DEFAULT_CHARSET
end
