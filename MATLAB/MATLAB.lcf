object SyntAnal34: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id keyword'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'Func'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end>
  TokenRules = <
    item
      DisplayName = 'Comment 2'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '(?s) ^%\{ .*? ^%\}'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '%.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 4
      Expression = 
        '#first '#39' must not be after wordchar, ), ]'#13#10'(?<![\w\)\]]) '#39' .*? (' +
        #39'|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      TokenType = 2
      Expression = '[a-z_]\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Float'
      StyleName = 'Number'
      TokenType = 5
      Expression = '(\d+ \.)? \d+ e [\+\-]? \d+ |'#13#10'\d* \. \d+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Integer'
      StyleName = 'Number'
      TokenType = 5
      Expression = '\d+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 3
      Expression = '[\\/\*,\.;:\(\)=<>\+\-\[\]\{\}'#39'"~!\?@\$\^&\|]'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'Keyword'
      StyleName = 'Id keyword'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'break'
            'case'
            'catch'
            'classdef'
            'continue'
            'else'
            'elseif'
            'end'
            'enumeration'
            'events'
            'for'
            'function'
            'global'
            'if'
            'methods'
            'otherwise'
            'parfor'
            'persistent'
            'properties'
            'return'
            'spmd'
            'switch'
            'try'
            'while')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Func'
      StyleName = 'Func'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'abs'
            'acos'
            'acosh'
            'add_annotation'
            'add_block'
            'add_line'
            'add_param'
            'all'
            'and'
            'any'
            'asin'
            'asinh'
            'assignin'
            'atan'
            'atan2'
            'atanh'
            'balance'
            'beep'
            'bitand'
            'bitcmp'
            'bitget'
            'bitor'
            'bitset'
            'bitshift'
            'bitxor'
            'builtin'
            'callstats'
            'cat'
            'cd'
            'ceil'
            'cell'
            'cell2struct'
            'cellhorzcat'
            'cells'
            'char'
            'chdir'
            'check_system'
            'chol'
            'cholinc'
            'cholupdate'
            'class'
            'clc'
            'clear'
            'clock'
            'close_system'
            'colon'
            'compare_system'
            'computer'
            'conj'
            'contourc'
            'conv2'
            'copyobj'
            'cos'
            'cosh'
            'cputime'
            'ctranspose'
            'cumprod'
            'cumsum'
            'dbclear'
            'dbcont'
            'dbdown'
            'dbquit'
            'dbstack'
            'dbstatus'
            'dbstep'
            'dbstop'
            'dbtype'
            'dbup'
            'delete'
            'delete_annotation'
            'delete_block'
            'delete_line'
            'delete_param'
            'det'
            'diag'
            'diary'
            'diff'
            'disp'
            'display'
            'dongarra'
            'dos'
            'double'
            'dragrect'
            'drawnow'
            'echo'
            'eig'
            'eps'
            'eq'
            'error'
            'errortrap'
            'eval'
            'evalc'
            'evalin'
            'exist'
            'exit'
            'exp'
            'expm'
            'eye'
            'fclose'
            'feature'
            'feof'
            'ferror'
            'feval'
            'fft'
            'fftn'
            'fftw'
            'fgets'
            'fieldnames'
            'fields'
            'filesep'
            'fill'
            'fill3'
            'filter'
            'find'
            'find_system'
            'findpackage'
            'findstr'
            'findtype'
            'finite'
            'fix'
            'floor'
            'fopen'
            'format'
            'fprintf'
            'frame2im'
            'fread'
            'fscanf'
            'fschange'
            'fseek'
            'ftell'
            'full'
            'func2str'
            'functions'
            'functionscalled'
            'fwrite'
            'ge'
            'getenv'
            'getframe'
            'gs_get_buttonmotion'
            'gt'
            'handle'
            'handle2struct'
            'hardcopy'
            'hcreate'
            'help'
            'hess'
            'hittest'
            'home'
            'horzcat'
            'hregister'
            'ieee'
            'ifft'
            'ifftn'
            'im2frame'
            'imag'
            'import'
            'inf'
            'inferiorto'
            'inmem'
            'input'
            'inputname'
            'int16'
            'int32'
            'int8'
            'inv'
            'isa'
            'iscell'
            'ischar'
            'isempty'
            'isequal'
            'isfinite'
            'isglobal'
            'ishandle'
            'isieee'
            'isinf'
            'isjava'
            'isletter'
            'islogical'
            'isnan'
            'isreal'
            'isruntime'
            'isspace'
            'issparse'
            'isstr'
            'isstudent'
            'java'
            'java_array'
            'java_method'
            'java_object'
            'javaArray'
            'javaMethod'
            'javaObject'
            'keyboard'
            'lasterr'
            'lastwarn'
            'ldivide'
            'le'
            'length'
            'license'
            'load'
            'log'
            'log2'
            'logical'
            'loglog'
            'lookfor'
            'lower'
            'lt'
            'ltitr'
            'lu'
            'luinc'
            'magic'
            'matlabpath'
            'matlabroot'
            'max'
            'mexext'
            'mfilename'
            'mimofr'
            'min'
            'minus'
            'mislocked'
            'mldivide'
            'mlock'
            'mod'
            'more'
            'movie'
            'mpower'
            'mrdivide'
            'mtimes'
            'munlock'
            'nan'
            'nargin'
            'nargout'
            'ndims'
            'ne'
            'new_system'
            'norm'
            'not'
            'numel'
            'ones'
            'open_system'
            'or'
            'pack'
            'pause'
            'permute'
            'pfile'
            'pi'
            'plot'
            'plot3'
            'plus'
            'pow2'
            'power'
            'prod'
            'qr'
            'qrupdate'
            'quit'
            'qz'
            'rand'
            'randn'
            'rbbox'
            'rcond'
            'rdivide'
            'real'
            'rehash'
            'rem'
            'reset'
            'reshape'
            'rmappdata'
            'round'
            'rtwgen'
            'runtime'
            'save'
            'save_system'
            'schur'
            'selectmoveresize'
            'semilogx'
            'semilogy'
            'setappdata'
            'setstr'
            'sign'
            'sim'
            'simulink'
            'simver'
            'sin'
            'single'
            'sinh'
            'size'
            'sldebug'
            'sort'
            'sparse'
            'sparsfun'
            'sprintf'
            'sqrt'
            'sscanf'
            'str2func'
            'strcmp'
            'strcmpi'
            'strfind'
            'string'
            'strncmp'
            'strncmpi'
            'strrep'
            'struct'
            'struct2cell'
            'struct2handle'
            'subsasgn'
            'subsindex'
            'subsref'
            'sum'
            'superiorto'
            'svd'
            'system'
            'system_dependent'
            'tan'
            'tanh'
            'tic'
            'times'
            'title'
            'toc'
            'transpose'
            'tril'
            'triu'
            'trmginput'
            'type'
            'u_convert_to_gobject'
            'uigetfile'
            'uimenufcn'
            'uint16'
            'uint32'
            'uint8'
            'uipushtool'
            'uiputfile'
            'uisetcolor'
            'uisetfont'
            'uitoggletool'
            'uitoolbar'
            'uminus'
            'unix'
            'uplus'
            'upper'
            'version'
            'vertcat'
            'vms'
            'waitfor'
            'waitforbuttonpress'
            'warning'
            'what'
            'which'
            'who'
            'whos'
            'xlabel'
            'xlate'
            'ylabel'
            'zeros')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'begin'
      ConditionList = <
        item
          TagList.Strings = (
            'classdef'
            'enumeration'
            'events'
            'for'
            'function'
            'if'
            'methods'
            'parfor'
            'properties'
            'switch'
            'try'
            'while')
          TokenTypes = 4
          IgnoreCase = True
        end>
      BlockEnd = 'end'
      DisplayInTree = False
      HighlightPos = cpAny
      DrawStaple = True
      IgnoreAsParent = False
    end
    item
      DisplayName = 'end'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            'end')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    'x = [1 2 3 4 5 6 7 8 9 10];'
    'y1 = [.16 .08 .04 .02 .013 .007 ];'
    ''
    'semilogy(x,y1,'#39'-bo;y1;'#39',x,y2,'#39'-kx;y2;'#39');'
    'title('#39'Plot title'#39');'
    'xlabel('#39'X Axis'#39');'
    'ylabel('#39'Y Axis'#39');'
    'print -deps graph.eps')
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Id'
    'Symbol'
    'String'
    'Number')
  Extentions = 'm'
  LexerName = 'MATLAB'
  Notes.Strings = (
    'Alexey (SynWrite)'
    'Test: http://math.la.asu.edu/~kuang/class/dmfile.htm')
  LineComment = '%'
  Charset = DEFAULT_CHARSET
end
